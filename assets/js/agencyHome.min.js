function RenderGrossRevenueChart(n){var t=$("#ddlclient option:selected").val();getAjax(`/AgencyService/GetGrossRevenueData?Option=${n}&cType=${0}&ClientID=${t}`,null,function(n){var t,i;n.Status=="Success"?(n.Xdata.shift(),n.Ydata.shift(),t=n.Xdata.reverse(),i=n.Ydata.reverse(),LineChart(t,i,"#container1")):(t=["No Data"],i=[0],LineChart(t,i,"#container1"))})}function Tabclick(n,t){sessionStorage.setItem("Type",t);t==1&&($("#tabselectBank").addClass("tabselect"),$("#tabNotinBanks").removeClass("tabselect"))}function RenderNetIncomeChart(n){var t=$("#ddlclient option:selected").val();getAjax(`/AgencyService/GetGrossRevenueData?Option=${n}&cType=${1}&ClientID=${t}`,null,function(n){var t,i;n.Status=="Success"?(n.Xdata.shift(),n.Ydata.shift(),t=n.Xdata.reverse(),i=n.Ydata.reverse(),LineChart(t,i,"#container2")):(t=["No Data"],i=[0],LineChart(t,i,"#container2"))})}function NeedsChart(n){let i=document.getElementById("echart-needs");var r=echarts.init(i);let t={color:colorArrays,tooltip:{trigger:"item",padding:[7,10],backgroundColor:utils.grays.white,textStyle:{color:utils.grays.black},transitionDuration:0,borderColor:utils.grays["300"],borderWidth:1,formatter:function(n){return n.data.name=="no data"?"":"<strong>"+n.data.name+":<\/strong> "+n.percent+"%"}},position:function(n,t,i,r,u){return getPosition(n,t,i,r,u)},legend:{show:!1},series:[{type:"pie",radius:["100%","87%"],avoidLabelOverlap:!1,hoverAnimation:!1,itemStyle:{borderWidth:2,borderColor:utils.grays.white},label:{normal:{show:!1,position:"center",textStyle:{fontSize:"20",fontWeight:"500",color:utils.grays["700"]}},emphasis:{show:!1}},labelLine:{normal:{show:!1}},data:n}]};t&&typeof t=="object"&&r.setOption(t)}function KanbanCountWithIndividualPriority(){var n=$("#ddlclient option:selected").val();getAjax(apiurl+`Needs/KanbanCountWithIndividualPriority?AgencyId=${n}`,null,function(n){var u,r,i,f,e;let t=n.resultData;$("#needsCategoryDiv").children().remove();for(key in color)u=`<div class="d-flex align-items-center">
                                                                        <span class="dot ${color[key].className}"></span>
                                                                        <span class="font-weight-semi-bold">${key}</span>
                                                                    </div>`,$("#needsCategoryDiv").append(u);if(r={},t!=undefined&&t.length>0)for(i=0;i<t.length;i++){let n=t[i].kanbanTaskLabelName,e=t[i].labelNameCount,u=0;u=t[i].totalTasks;$("#lblTotalTasksCount").text(u);f={value:e,name:n};r[n]=f}else $("#lblTotalTasksCount").text(0),e={value:1,name:"no data"},r["no data"]=e;for(key in r)colorArrays.push(color[key]?color[key].echartColorCode:defaultChartColor);NeedsChart(Object.values(r))})}function NotesChart(n){let i=document.getElementById("echart-notes");var r=echarts.init(i);let t={color:colorsArray,tooltip:{trigger:"item",padding:[7,10],backgroundColor:utils.grays.white,textStyle:{color:utils.grays.black},transitionDuration:0,borderColor:utils.grays["300"],borderWidth:1,formatter:function(n){return n.data.name=="no data"?"":"<strong>"+n.data.name+":<\/strong> "+n.percent+"%"}},position:function(n,t,i,r,u){return getPosition(n,t,i,r,u)},legend:{show:!1},series:[{type:"pie",radius:["100%","87%"],avoidLabelOverlap:!1,hoverAnimation:!1,itemStyle:{borderWidth:2,borderColor:utils.grays.white},label:{normal:{show:!1,position:"center",textStyle:{fontSize:"20",fontWeight:"500",color:utils.grays["700"]}},emphasis:{show:!1}},labelLine:{normal:{show:!1}},data:n}]};t&&typeof t=="object"&&r.setOption(t)}function NotesIndividualCountAndPercentageByAgencyId(){var n=$("#ddlclient option:selected").val();getAjax(apiurl+`Notes/NotesIndividualCountAndPercentageByAgencyId?AgencyId=${n}`,null,function(n){var f,r,i,u;let t=n.resultData;$("#notesCategoryDiv").children().remove();for(key in colorsNoteCat)f=`<div class="d-flex align-items-center">
                                                                            <span class="dot ${colorsNoteCat[key].className}"></span>
                                                                            <span class="font-weight-semi-bold">${key}</span>
                                                                        </div>`; $("#notesCategoryDiv").append(a)
        } var o = {}; if (void 0 != t && t.length > 0) for (var r = 0; r < t.length; r++) { let n = t[r].noteCategoryName, l = t[r].noteCategoryCount, s = t[r].totalNotes; var i = { value: l, name: n }; o[n] = i, $("#lblTotalNotesCount").text(s) } else { $("#lblTotalNotesCount").text(0); var i = { value: 1, name: "no data" }; o["no data"] = i } for (key in o) colorsArray.push(colorsNoteCat[key] ? colorsNoteCat[key].chartColorCode : defaultChartColor); NotesChart(Object.values(o))
    })
} function getTeamMembersList() { var e = $("#ddlclient option:selected").val(); $.ajax({ url: "/Needs/getTeamMembersList?ClientID=" + e, type: "GET", contentType: "application/json; charset=utf-8", dataType: "json", success: function (e) { if (null != e) { var t, a = 0; $.each(e.TeamMembers, function (e, o) { $("#teamMember" + (a = o.OrderNumber)).css({ display: "" }), null != o.Username && "" != o.Username && (t = "tel:" + o.PhoneNumber, $("#phoneNumber" + a).attr("href", t), $("#phoneNumber" + a).removeClass("disabled-action-icons")), null != o.Username && "" != o.Username && null != o.Email && void 0 != o.Email && ($("#email" + a).data("clipboard-text", String(o.Email)), $("#email" + a).removeClass("disabled-action-icons")), null != o.LinkedInProfile && "" != o.LinkedInProfile ? ($("#aLinkedInProfile" + a).attr("href", o.LinkedInProfile), $("#aLinkedInProfile" + a).prop("disabled", !1), $("#aLinkedInProfile" + a).removeClass("disabled-action-icons")) : ($("#aLinkedInProfile" + a)[0].className = $("#aLinkedInProfile" + a)[0].className + " disabled-action-icons", $("#aLinkedInProfile" + a).prop("disabled", !0)), null != o.Username && "" != o.Username && null != o.Jobtitle && "" != o.Jobtitle ? 1 == a ? ($("#spStaffName" + a).html(String(o.Username)), $("#spJobTitle" + a).html("CFO")) : 2 == a ? ($("#spStaffName" + a).html(String(o.Username)), $("#spJobTitle" + a).html("Accounting Manager")) : 3 == a ? ($("#spStaffName" + a).html(String(o.Username)), $("#spJobTitle" + a).html("Accountant")) : 4 == a && ($("#spStaffName" + a).html(String(o.Username)), $("#spJobTitle" + a).html("Bookkeeper")) : ($("#spStaffName" + a).html(String("")), $("#spJobTitle" + a).html(String(""))), null != o.Profileimage && "" != o.Profileimage ? $("#spProfileImage" + a).attr("src", o.Profileimage) : $("#spProfileImage" + a).attr("src", "../assets/img/team/default-logo.png") }) } } }) } function GetAccountOutStanding() { var e = $("#ddlclient option:selected").val(); $.ajax({ url: `/AgencyService/GetAccountOutStanding?ClientID=${e}`, type: "GET", contentType: "application/json; charset=utf-8", dataType: "json", success: function (e) { null != e && "" != e ? $("#spOutSanding").html(ConvertToUDS(e.Total)) : $("#spOutSanding").html(ConvertToUDS(0)) }, error: function (e) { $("#spOutSanding").html(ConvertToUDS(0)), console.log(e) } }) } function AgencyDropdownPartialViewChange() { ShowlottieLoader(); var e = $("#ddlclient option:selected").val(); $.ajax({ url: "/AgencyService/GetClientDetails?id=" + e, type: "GET", contentType: "application/json; charset=utf-8", dataType: "json", success: function (t) { if (null != t) { if (HidelottieLoader(), MenuOptionHideAndShow(e), GetReconcilationData(), GetReconcilationData1(), KanbanCountWithIndividualPriority(), NotesIndividualCountAndPercentageByAgencyId(), $("#roleexist").show(), $(".spClientName").html(String(t.Name)), $(".spEntityName").html(String(t.EntityName)), null != t.StartDate && "" != t.StartDate) { let a = UtcDateToLocalTime(Number(t.StartDate.match(/\d+/)[0])).toDateString(); $("#spCreatedDate").html(a) } $("#spStatus").html(String(t.Status ? "Active" : "Inactive")); let o = moment(new Date).diff(moment(t.StartDate), "months", !1) + 1; $("#spMonths").html(o), getTeamMembersList(), defaultReportsWidget(), $(".badge-soft-success").removeClass("d-none"), $(".badge-success").removeClass("d-none"), $(".rounded-circle").removeClass("d-none") } else $("#roleexist").hide(), $(".spClientName").html(""), $(".spEntityName").html(""), $("#spCreatedDate").html(""), $("#spMonths").html(""), $("#spStatus").html(""), $("#spClientAddress").html(""), $(".badge-soft-success").addClass("d-none"), $(".badge-success").removeClass("d-none"), $(".rounded-circle").removeClass("d-none") }, error: function () { $("#roleexist").hide(), $(".spClientName").html(""), $(".spEntityName").html(""), $("#spCreatedDate").html(""), $("#spMonths").html(""), $("#spStaffName1").html(""), $("#spStaffName2").html(""), $("#spStaffName3").html(""), $("#spStaffName4").html(""), $("#spJobTitle1").html(""), $("#spJobTitle2").html(""), $("#spJobTitle3").html(""), $("#spJobTitle4").html(""), $("#spProfileImage1").removeAttr("src"), $("#spProfileImage2").removeAttr("src"), $("#spProfileImage3").removeAttr("src"), $("#spProfileImage4").removeAttr("src"), $("#spTeamChat1").removeAttr("href"), $("#spTeamChat2").removeAttr("href"), $("#spTeamChat3").removeAttr("href"), $("#spTeamChat4").removeAttr("href"), $("#spStatus").html(""), $("#spClientAddress").html(""), $(".badge-soft-success").addClass("d-none"), $(".badge-success").addClass("d-none"), $(".rounded-circle").addClass("d-none") } }), window.onerror = function (e) { console.log(e), HidelottieLoader() } } function GetReconcilationData() { var e = $("#ddlclient option:selected").val(), t = 0; if (totalSum1 = 0, null == sessionStorage.getItem("NotInBanksData")) getAjax(`/Reconciliation/GetReconciliationDashboardDataAgencyId?AgencyId=${e}&type=Outstanding Payments`, null, function (e) { if ("Success" == e.Message) { let a = e.ResultData; null != a && a.length > 0 ? ($("#lblNotInBanksCount2").text(a[0].Count), $("#lblpostiveBanksCount").text(ConvertToUDS(a[0].amountPositive).replace("-", "")), $("#lblNegativeBanksCount").text(ConvertToUDS(a[0].amountNegative).replace("-", "")), t = a[0].percentage.toFixed(0), totalSum1 = a[0].Count, sessionStorage.setItem("NotInBanksData", JSON.stringify(a))) : ($("#lblNegativeBanksCount").text(ConvertToUDS(0).replace("-", "")), $("#lblPostiveInBooksCount").text(ConvertToUDS(0).replace("-", ""))), $("#divNotInBankPercentage").html(`<div class="progress-circle" id="lblNotInBankPercentage" data-options='{"color":"url(#gradient)","progress":${t},"strokeWidth":5,"trailWidth":5}'></div>`), utils.addProgressCircle("#lblNotInBankPercentage"), TotalSum(totalSum1, totalSum2) } }); else { let a = JSON.parse(sessionStorage.getItem("NotInBanksData")); null != a && a.length > 0 ? ($("#lblNotInBanksCount2").text(a[0].Count), $("#lblpostiveBanksCount").text(ConvertToUDS(a[0].amountPositive).replace("-", "")), $("#lblNegativeBanksCount").text(ConvertToUDS(a[0].amountNegative).replace("-", "")), t = a[0].percentage.toFixed(0), totalSum1 = a[0].Count) : ($("#lblNegativeBanksCount").text(ConvertToUDS(0).replace("-", "")), $("#lblPostiveInBooksCount").text(ConvertToUDS(0).replace("-", ""))), $("#divNotInBankPercentage").html(`<div class="progress-circle" id="lblNotInBankPercentage" data-options='{"color":"url(#gradient)","progress":${t},"strokeWidth":5,"trailWidth":5}'></div>`), utils.addProgressCircle("#lblNotInBankPercentage"), TotalSum(totalSum1, totalSum2) } } function GetReconcilationData1() { var e = $("#ddlclient option:selected").val(), t = 0; if (totalSum2 = 0, null == sessionStorage.getItem("NotInBooksData")) getAjax(`/Reconciliation/GetReconciliationDashboardDataAgencyId?AgencyId=${e}&type=Unreconciled`, null, function (e) { if ("Success" == e.Message) { let a = e.ResultData; null != a && a.length > 0 ? ($("#lblNotInBooksCount2").text(a[0].Count), $("#lblNegativeInBooksCount").text(ConvertToUDS(a[0].amountPositive).replace("-", "")), $("#lblPostiveInBooksCount").text(ConvertToUDS(a[0].amountNegative).replace("-", "")), totalSum2 = a[0].Count, t = a[0].percentage.toFixed(0), sessionStorage.setItem("NotInBooksData", JSON.stringify(a))) : ($("#lblNegativeBanksCount").text(ConvertToUDS(0).replace("-", "")), $("#lblNegativeInBooksCount").text(ConvertToUDS(0).replace("-", ""))), $("#divNotInBookPercentage").html(`<div class="progress-circle" id="divNotInBookPercentage1" data-options='{"color":"url(#gradient)","progress":${t},"strokeWidth":5,"trailWidth":5}'></div>`), utils.addProgressCircle("#divNotInBookPercentage1"), TotalSum(totalSum1, totalSum2) } }); else { var a = JSON.parse(sessionStorage.getItem("NotInBooksData")); null != a && a.length > 0 ? ($("#lblNotInBooksCount2").text(a[0].Count), $("#lblNegativeInBooksCount").text(ConvertToUDS(a[0].amountPositive).replace("-", "")), $("#lblPostiveInBooksCount").text(ConvertToUDS(a[0].amountNegative).replace("-", "")), totalSum2 = a[0].Count, t = a[0].percentage.toFixed(0)) : ($("#lblNegativeBanksCount").text(ConvertToUDS(0).replace("-", "")), $("#lblNegativeInBooksCount").text(ConvertToUDS(0).replace("-", ""))), $("#divNotInBookPercentage").html(`<div class="progress-circle" id="divNotInBookPercentage1" data-options='{"color":"url(#gradient)","progress":${t},"strokeWidth":5,"trailWidth":5}'></div>`), utils.addProgressCircle("#divNotInBookPercentage1"), TotalSum(totalSum1, totalSum2) } } function TotalSum(e, t) { let a = 0; isNaN(e + t) ? $("#lblNotInCount").addClass("d-none") : ($("#lblNotInCount").removeClass("d-none"), a = isNaN(e + t) ? 0 : Number(e + t), $("#lblNotInCount").text(a)) } const camelize = e => { let t = e.replace(/[-_\s.]+(.)?/g, (e, t) => t ? t.toUpperCase() : ""); return `${t.substr(0, 1).toLowerCase()}${t.substr(1)}` }, getData = (e, t) => { try { return JSON.parse(e.dataset[camelize(t)]) } catch (a) { return e.dataset[camelize(t)] } }, getGrays = e => ({ white: getColor("white", e), 100: getColor("100", e), 200: getColor("200", e), 300: getColor("300", e), 400: getColor("400", e), 500: getColor("500", e), 600: getColor("600", e), 700: getColor("700", e), 800: getColor("800", e), 900: getColor("900", e), 1e3: getColor("1000", e), 1100: getColor("1100", e), black: getColor("black", e) }), getColors = e => ({ primary: getColor("primary", e), secondary: getColor("secondary", e), success: getColor("success", e), info: getColor("info", e), warning: getColor("warning", e), danger: getColor("danger", e), light: getColor("light", e), dark: getColor("dark", e) }), getColor = (e, t = document.documentElement) => getComputedStyle(t).getPropertyValue(`--falcon-${e}`).trim(), rgbaColor = (e = "#fff", t = .5) => `rgba(${hexToRgb(e)}, ${t})`, hexToRgb = e => { let t; t = 0 === e.indexOf("#") ? e.substring(1) : e; let a = /^#?([a-f\d])([a-f\d])([a-f\d])$/i, o = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t.replace(a, (e, t, a, o) => t + t + a + a + o + o)); return o ? [parseInt(o[1], 16), parseInt(o[2], 16), parseInt(o[3], 16),] : null }; var totalSalesInit = function e() { var t = document.querySelector(".echart-line-total-sales"), a = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]; if (t) { var o = getData(t, "options"), r = window.echarts.init(t), n = [[60, 80, 60, 80, 65, 130, 120, 100, 30, 40, 30, 70], [100, 70, 80, 50, 120, 100, 130, 140, 90, 100, 40, 50], [80, 50, 60, 40, 60, 120, 100, 130, 60, 80, 50, 60], [70, 80, 100, 70, 90, 60, 80, 130, 40, 60, 50, 80], [90, 40, 80, 80, 100, 140, 100, 130, 90, 60, 70, 50], [80, 60, 80, 60, 40, 100, 120, 100, 30, 40, 30, 70], [20, 40, 20, 50, 70, 60, 110, 80, 90, 30, 50, 50], [60, 70, 30, 40, 80, 140, 80, 140, 120, 130, 100, 110], [90, 90, 40, 60, 40, 110, 90, 110, 60, 80, 60, 70], [50, 80, 50, 80, 50, 80, 120, 80, 50, 120, 110, 110], [60, 90, 60, 70, 40, 70, 100, 140, 30, 40, 30, 70], [20, 40, 20, 50, 30, 80, 120, 100, 30, 40, 30, 70]], l = { color: getGrays()["100"], tooltip: { trigger: "axis", padding: [7, 10], backgroundColor: getGrays()["100"], borderColor: getGrays()["300"], textStyle: { color: getColors().dark }, borderWidth: 1, formatter: function e(t) { var o, r, n, l, s; return n = (r = (o = t)[0]).name, l = r.value, s = new Date(n), "".concat(a[0], " ").concat(s.getDate(), ", ").concat(l) }, transitionDuration: 0, position: function e(t, a, o, r, n) { return getPosition(t, a, o, r, n) } }, xAxis: { type: "category", data: ["2019-01-05", "2019-01-06", "2019-01-07", "2019-01-08", "2019-01-09", "2019-01-10", "2019-01-11", "2019-01-12", "2019-01-13", "2019-01-14", "2019-01-15", "2019-01-16"], boundaryGap: !1, axisPointer: { lineStyle: { color: getGrays()["300"], type: "dashed" } }, splitLine: { show: !1 }, axisLine: { lineStyle: { color: rgbaColor("#000", .01), type: "dashed" } }, axisTick: { show: !1 }, axisLabel: { color: getGrays()["400"], formatter: function e(t) { var o = new Date(t); return "".concat(a[o.getMonth()], " ").concat(o.getDate()) }, margin: 15 } }, yAxis: { type: "value", axisPointer: { show: !1 }, splitLine: { lineStyle: { color: getGrays()["300"], type: "dashed" } }, boundaryGap: !1, axisLabel: { show: !0, color: getGrays()["400"], margin: 15 }, axisTick: { show: !1 }, axisLine: { show: !1 } }, series: [{ type: "line", data: n[0], lineStyle: { color: getColors().primary }, itemStyle: { borderColor: getColors().primary, borderWidth: 2 }, symbol: "circle", symbolSize: 10, smooth: !1, hoverAnimation: !0, areaStyle: { color: { type: "linear", x: 0, y: 0, x2: 0, y2: 1, colorStops: [{ offset: 0, color: rgbaColor(getColors().primary, .2) }, { offset: 1, color: rgbaColor(getColors().primary, 0) }] } } }], grid: { right: "28px", left: "40px", bottom: "15%", top: "5%" } }; l && r.setOption(l), t.echartSetOption(r, o, l); var s = document.querySelector(".select-month"); s && s.addEventListener("change", function (e) { var t = e.currentTarget.value, o = n[t]; r.setOption({ tooltip: { formatter: function e(o) { var r = o[0], n = r.name, l = r.value, s = new Date(n); return "".concat(a[t], " ").concat(s.getDate(), ", ").concat(l) } }, xAxis: { axisLabel: { formatter: function e(o) { var r = new Date(o); return "".concat(a[t], " ").concat(r.getDate()) }, margin: 15 } }, series: [{ data: o }] }) }) } }, totalSalesInitTwo = function e() { var t = document.querySelector(".echart-line-total-sales-2"), a = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]; if (t) { getData(t, "options"); var o = window.echarts.init(t), r = [[60, 80, 60, 80, 65, 130, 120, 100, 30, 40, 30, 70], [100, 70, 80, 50, 120, 100, 130, 140, 90, 100, 40, 50], [80, 50, 60, 40, 60, 120, 100, 130, 60, 80, 50, 60], [70, 80, 100, 70, 90, 60, 80, 130, 40, 60, 50, 80], [90, 40, 80, 80, 100, 140, 100, 130, 90, 60, 70, 50], [80, 60, 80, 60, 40, 100, 120, 100, 30, 40, 30, 70], [20, 40, 20, 50, 70, 60, 110, 80, 90, 30, 50, 50], [60, 70, 30, 40, 80, 140, 80, 140, 120, 130, 100, 110], [90, 90, 40, 60, 40, 110, 90, 110, 60, 80, 60, 70], [50, 80, 50, 80, 50, 80, 120, 80, 50, 120, 110, 110], [60, 90, 60, 70, 40, 70, 100, 140, 30, 40, 30, 70], [20, 40, 20, 50, 30, 80, 120, 100, 30, 40, 30, 70]], n = { color: getGrays()["100"], tooltip: { trigger: "axis", padding: [7, 10], backgroundColor: getGrays()["100"], borderColor: getGrays()["300"], textStyle: { color: getColors().dark }, borderWidth: 1, formatter: function e(t) { var o, r, n, l, s; return n = (r = (o = t)[0]).name, l = r.value, s = new Date(n), "".concat(a[0], " ").concat(s.getDate(), ", ").concat(l) }, transitionDuration: 0, position: function e(t, a, o, r, n) { return getPosition(t, a, o, r, n) } }, xAxis: { type: "category", data: ["2019-01-05", "2019-01-06", "2019-01-07", "2019-01-08", "2019-01-09", "2019-01-10", "2019-01-11", "2019-01-12", "2019-01-13", "2019-01-14", "2019-01-15", "2019-01-16"], boundaryGap: !1, axisPointer: { lineStyle: { color: getGrays()["300"], type: "dashed" } }, splitLine: { show: !1 }, axisLine: { lineStyle: { color: getGrays()["300"], type: "dashed" } }, axisTick: { show: !1 }, axisLabel: { formatter: function e(t) { var o = new Date(t); return "".concat(a[o.getMonth()], " ").concat(o.getDate()) }, margin: 15 } }, yAxis: { type: "value", axisPointer: { show: !1 }, splitLine: { lineStyle: { color: getGrays()["300"], type: "dashed" } }, boundaryGap: !1, axisLabel: { show: !0, color: getGrays()["400"], margin: 15 }, axisTick: { show: !1 }, axisLine: { show: !1 } }, series: [{ type: "line", data: r[0], lineStyle: { color: getColors().primary }, itemStyle: { borderColor: getColors().primary, borderWidth: 2 }, symbol: "circle", symbolSize: 10, smooth: !1, hoverAnimation: !0, areaStyle: { color: { type: "linear", x: 0, y: 0, x2: 0, y2: 1, colorStops: [{ offset: 0, color: rgbaColor(getColors().primary, .2) }, { offset: 1, color: rgbaColor(getColors().primary, 0) }] } } }], grid: { right: "28px", left: "40px", bottom: "15%", top: "5%" } }; n && o.setOption(n); var l = document.querySelector(".select-month"); l && l.addEventListener("change", function (e) { var t = e.currentTarget.value, n = r[t]; o.setOption({ tooltip: { formatter: function e(o) { var r = o[0], n = r.name, l = r.value, s = new Date(n); return "".concat(a[t], " ").concat(s.getDate(), ", ").concat(l) } }, xAxis: { axisLabel: { formatter: function e(o) { var r = new Date(o); return "".concat(a[t], " ").concat(r.getDate()) }, margin: 15 } }, series: [{ data: n }] }) }) } }, defaultReportsWidget = function () { var e = $("#ddlclient option:selected").val(); getAjax(`/Reports/GetDashboardReports?agencyId=${e}`, null, function (e) { var t = $("#divMonthlyReports"), a = $("#divYearlyReports"); if (t.empty(), a.empty(), e.DataMonthly.length > 0) for (var o = 0; o < e.DataMonthly.length; o++) { let r = prepareReportMedia(e.DataMonthly[o]); t.append(r) } if (e.DataYearly.length > 0) for (var o = 0; o < e.DataYearly.length; o++) { let n = prepareReportMedia(e.DataYearly[o]); a.append(n) } }) }; function prepareReportMedia(e) {
    let t = SpecialURLEncoding(e.DownloadFileLink), a = getSampleBGImageByFileExtension(e.FileExtention); return isEmptyOrBlank(a) && (a = e.FilePath), e.FilePath = e.FilePath.replace("~/", "../../"), `<div class="media align-items-center mb-3">
                                                                        </div>`,$("#notesCategoryDiv").append(f);if(r={},t!=undefined&&t.length>0)for(i=0;i<t.length;i++){let n=t[i].noteCategoryName,f=t[i].noteCategoryCount,e=t[i].totalNotes;u={value:f,name:n};r[n]=u;$("#lblTotalNotesCount").text(e)}else $("#lblTotalNotesCount").text(0),u={value:1,name:"no data"},r["no data"]=u;for(key in r)colorsArray.push(colorsNoteCat[key]?colorsNoteCat[key].chartColorCode:defaultChartColor);NotesChart(Object.values(r))})}function getTeamMembersList(){var n=$("#ddlclient option:selected").val();$.ajax({url:"/Needs/getTeamMembersList?ClientID="+n,type:"GET",contentType:"application/json; charset=utf-8",dataType:"json",success:function(n){if(n!=null){var t=0,i;$.each(n.TeamMembers,function(n,r){t=r.OrderNumber;$("#teamMember"+t).css({display:""});r.Username!=null&&r.Username!=""&&($("#spTeamChat"+t).removeClass("disabled-action-icons"),i="tel:"+r.PhoneNumber,i!=null&&($("#phoneNumber"+t).attr("href",i),$("#phoneNumber"+t).removeClass("disabled-action-icons")));r.Username!=null&&r.Username!=""&&r.Email!=null&&r.Email!=undefined&&($("#email"+t).data("clipboard-text",String(r.Email)),$("#email"+t).removeClass("disabled-action-icons"));r.LinkedInProfile!=null&&r.LinkedInProfile!=""?($("#aLinkedInProfile"+t).attr("href",r.LinkedInProfile),$("#aLinkedInProfile"+t).prop("disabled",!1),$("#aLinkedInProfile"+t).removeClass("disabled-action-icons")):($("#aLinkedInProfile"+t)[0].className=$("#aLinkedInProfile"+t)[0].className+" disabled-action-icons",$("#aLinkedInProfile"+t).prop("disabled",!0));r.Username!=null&&r.Username!=""&&r.Jobtitle!=null&&r.Jobtitle!=""?t==1?($("#spStaffName"+t).html(String(r.Username)),$("#spJobTitle"+t).html("CFO")):t==2?($("#spStaffName"+t).html(String(r.Username)),$("#spJobTitle"+t).html("Accounting Manager")):t==3?($("#spStaffName"+t).html(String(r.Username)),$("#spJobTitle"+t).html("Accountant")):t==4&&($("#spStaffName"+t).html(String(r.Username)),$("#spJobTitle"+t).html("Bookkeeper")):($("#spStaffName"+t).html(String("")),$("#spJobTitle"+t).html(String("")));r.Profileimage!=null&&r.Profileimage!=""?$("#spProfileImage"+t).attr("src",r.Profileimage):$("#spProfileImage"+t).attr("src","../assets/img/team/default-logo.png");r.Email!=null&&r.Email!=""?$("#spTeamChat"+t).attr("href",`/Communication/Chat?WithTeamMember=${r.Email}`):$("#spTeamChat"+t).attr("href","")})}}})}function GetAccountOutStanding(){var n=$("#ddlclient option:selected").val();$.ajax({url:`/AgencyService/GetAccountOutStanding?ClientID=${n}`,type:"GET",contentType:"application/json; charset=utf-8",dataType:"json",success:function(n){n!=null&&n!=""?$("#spOutSanding").html(ConvertToUDS(n.Total)):$("#spOutSanding").html(ConvertToUDS(0))},error:function(n){$("#spOutSanding").html(ConvertToUDS(0));console.log(n)}})}function AgencyDropdownPartialViewChange(){ShowlottieLoader();var n=$("#ddlclient option:selected").val();$.ajax({url:"/AgencyService/GetClientDetails?id="+n,type:"GET",contentType:"application/json; charset=utf-8",dataType:"json",success:function(t){if(t!=null){if(MenuOptionHideAndShow(n),GetReconcilationData(),GetReconcilationData1(),KanbanCountWithIndividualPriority(),NotesIndividualCountAndPercentageByAgencyId(),$("#roleexist").show(),$(".spClientName").html(String(t.Name)),$(".spEntityName").html(String(t.EntityName)),t.StartDate!=null&&t.StartDate!=""){let n=Number(t.StartDate.match(/\d+/)[0]),i=UtcDateToLocalTime(n).toDateString();$("#spCreatedDate").html(i)}$("#spStatus").html(String(t.Status?"Active":"Inactive"));let i=moment(new Date).diff(moment(t.StartDate),"months",!1)+1;$("#spMonths").html(i);getTeamMembersList();defaultReportsWidget();$(".badge-soft-success").removeClass("d-none");$(".badge-success").removeClass("d-none");$(".rounded-circle").removeClass("d-none")}else $("#roleexist").hide(),$(".spClientName").html(""),$(".spEntityName").html(""),$("#spCreatedDate").html(""),$("#spMonths").html(""),$("#spStatus").html(""),$("#spClientAddress").html(""),$(".badge-soft-success").addClass("d-none"),$(".badge-success").removeClass("d-none"),$(".rounded-circle").removeClass("d-none")},error:function(){$("#roleexist").hide();$(".spClientName").html("");$(".spEntityName").html("");$("#spCreatedDate").html("");$("#spMonths").html("");$("#spStaffName1").html("");$("#spStaffName2").html("");$("#spStaffName3").html("");$("#spStaffName4").html("");$("#spJobTitle1").html("");$("#spJobTitle2").html("");$("#spJobTitle3").html("");$("#spJobTitle4").html("");$("#spProfileImage1").removeAttr("src");$("#spProfileImage2").removeAttr("src");$("#spProfileImage3").removeAttr("src");$("#spProfileImage4").removeAttr("src");$("#spTeamChat1").removeAttr("href");$("#spTeamChat2").removeAttr("href");$("#spTeamChat3").removeAttr("href");$("#spTeamChat4").removeAttr("href");$("#spStatus").html("");$("#spClientAddress").html("");$(".badge-soft-success").addClass("d-none");$(".badge-success").addClass("d-none");$(".rounded-circle").addClass("d-none")}});window.onerror=function(n){console.log(n);HidelottieLoader()}}function GetReconcilationData(){var t=$("#ddlclient option:selected").val(),n=0;if(totalSum1=0,sessionStorage.getItem("NotInBanksData")==null)getAjax(`/Reconciliation/GetReconciliationDashboardDataAgencyId?AgencyId=${t}&type=Outstanding Payments`,null,function(t){if(t.Message=="Success"){let i=t.ResultData;i!=null&&i.length>0?($("#lblNotInBanksCount2").text(i[0].Count),$("#lblpostiveBanksCount").text(ConvertToUDS(i[0].amountPositive).replace("-","")),$("#lblNegativeBanksCount").text(ConvertToUDS(i[0].amountNegative).replace("-","")),n=i[0].percentage.toFixed(0),totalSum1=i[0].Count,sessionStorage.setItem("NotInBanksData",JSON.stringify(i))):($("#lblNegativeBanksCount").text(ConvertToUDS(0).replace("-","")),$("#lblPostiveInBooksCount").text(ConvertToUDS(0).replace("-","")));$("#divNotInBankPercentage").html(`<div class="progress-circle" id="lblNotInBankPercentage" data-options='{"color":"url(#gradient)","progress":${n},"strokeWidth":5,"trailWidth":5}'></div>`);utils.addProgressCircle("#lblNotInBankPercentage");TotalSum(totalSum1,totalSum2)}});else{let t=JSON.parse(sessionStorage.getItem("NotInBanksData"));t!=null&&t.length>0?($("#lblNotInBanksCount2").text(t[0].Count),$("#lblpostiveBanksCount").text(ConvertToUDS(t[0].amountPositive).replace("-","")),$("#lblNegativeBanksCount").text(ConvertToUDS(t[0].amountNegative).replace("-","")),n=t[0].percentage.toFixed(0),totalSum1=t[0].Count):($("#lblNegativeBanksCount").text(ConvertToUDS(0).replace("-","")),$("#lblPostiveInBooksCount").text(ConvertToUDS(0).replace("-","")));$("#divNotInBankPercentage").html(`<div class="progress-circle" id="lblNotInBankPercentage" data-options='{"color":"url(#gradient)","progress":${n},"strokeWidth":5,"trailWidth":5}'></div>`);utils.addProgressCircle("#lblNotInBankPercentage");TotalSum(totalSum1,totalSum2)}}function GetReconcilationData1(){var i=$("#ddlclient option:selected").val(),t=0,n;totalSum2=0;sessionStorage.getItem("NotInBooksData")==null?getAjax(`/Reconciliation/GetReconciliationDashboardDataAgencyId?AgencyId=${i}&type=Unreconciled`,null,function(n){if(n.Message=="Success"){let i=n.ResultData;i!=null&&i.length>0?($("#lblNotInBooksCount2").text(i[0].Count),$("#lblNegativeInBooksCount").text(ConvertToUDS(i[0].amountPositive).replace("-","")),$("#lblPostiveInBooksCount").text(ConvertToUDS(i[0].amountNegative).replace("-","")),totalSum2=i[0].Count,t=i[0].percentage,$("#divNotInBankPercentage").html(`<div class="progress-circle" id="divNotInBankPercentage1" data-options='{"color":"url(#gradient)","progress":${t},"strokeWidth":5,"trailWidth":5}'></div>`),utils.addProgressCircle("#divNotInBankkPercentage1"),sessionStorage.setItem("NotInBooksData",JSON.stringify(i))):($("#lblNegativeBanksCount").text(ConvertToUDS(0).replace("-","")),$("#lblNegativeInBooksCount").text(ConvertToUDS(0).replace("-","")));$("#divNotInBookPercentage").html(`<div class="progress-circle" id="divNotInBookPercentage1" data-options='{"color":"url(#gradient)","progress":${t},"strokeWidth":5,"trailWidth":5}'></div>`);utils.addProgressCircle("#divNotInBookPercentage1");TotalSum(totalSum1,totalSum2)}}):(n=JSON.parse(sessionStorage.getItem("NotInBooksData")),n!=null&&n.length>0?($("#lblNotInBooksCount2").text(n[0].Count),$("#lblNegativeInBooksCount").text(ConvertToUDS(n[0].amountPositive).replace("-","")),$("#lblPostiveInBooksCount").text(ConvertToUDS(n[0].amountNegative).replace("-","")),totalSum2=n[0].Count,t=n[0].percentage.toFixed(0)):($("#lblNegativeBanksCount").text(ConvertToUDS(0).replace("-","")),$("#lblNegativeInBooksCount").text(ConvertToUDS(0).replace("-",""))),$("#divNotInBookPercentage").html(`<div class="progress-circle" id="divNotInBookPercentage1" data-options='{"color":"url(#gradient)","progress":${t},"strokeWidth":5,"trailWidth":5}'></div>`),utils.addProgressCircle("#divNotInBookPercentage1"),TotalSum(totalSum1,totalSum2))}function TotalSum(n,t){let i=0;isNaN(n+t)?$("#lblNotInCount").addClass("d-none"):($("#lblNotInCount").removeClass("d-none"),i=isNaN(n+t)?0:Number(n+t),$("#lblNotInCount").text(i))}function prepareReportMedia(n){let i=SpecialURLEncoding(n.DownloadFileLink),t=getSampleBGImageByFileExtension(n.FileExtention);isEmptyOrBlank(t)&&(t=n.FilePath);n.FilePath=n.FilePath.replace("~/","../../");t=t.replace("~/","../../");return`<div class="media align-items-center mb-3">
                                    <div class="avatar avatar-2xl">
                                        <a class="data-fancybox" href="${i}" data-fancybox="group" data-type="iframe"><img class="rounded" src="${t}" alt="" style="height:46px;width:36px"></a>
                                    </div>
                                    <div class="media-body ml-3">
                                        <h6 class="mb-0 font-weight-semi-bold"><a class="text-900" href="${i}"data-fancybox="group" id='y-Report'>${n.PeriodType} ${n.Year}</a></h6>
                                        <p class="text-500 fs--2 mb-0">Created <span class="ml-2 d-inline-block">${moment(n.CreatedDate).format("MMMM DD, YYYY")}</span></p>
                                        <h6 class="mb-0 font-weight-semi-bold"><a class="text-900" href="${t}"data-fancybox="group" data-type="iframe">${e.PeriodType} ${e.Year}</a></h6>
                                        <p class="text-500 fs--2 mb-0">Created <span class="ml-2 d-inline-block">${moment(e.CreatedDate).format("MMMM DD, YYYY")}</span></p>
                                    </div>
                                </div>`}var colorArrays,defaultChartColor,color,colorsArray,colors,colorsNoteCat,totalSum1,totalSum2,createTwilioUser;$("divClientDetials").addClass("d-none");$(document).ready(function(){new Clipboard(".copyEmail",{text:function(n){let t=$(n).data("clipboard-text");return toastr.success("Email address successfully copied to your clipboard "+t),t}});AgencyDropdownPartialViewChange();setTimeout(function(){$(".currency-usd").each(function(n,t){var i=$(t).text(),r;i=="0"&&(r=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format(i),$(t).text(r))})},3e3)});colorArrays=[];defaultChartColor="#edf2f9";color={Urgent:{className:"bg-red",echartColorCode:"#ff0000"},High:{className:"bg-orange",echartColorCode:"#F68F57"},Medium:{className:"bg-light-blue",echartColorCode:"#27BCFE"},Low:{className:"bg-green",echartColorCode:"#00BE82"}};colorsArray=[];colors={Income:{className:"bg-red",chartColorCode:"#ff0000"},Expenses:{className:"bg-orange",chartColorCode:"#F68F57"},Assets:{className:"bg-green",chartColorCode:"#00BE82"},"Bank Balance":{className:"bg-soft-primary",chartColorCode:"#bfbfbf"},Liabilities:{className:"bg-blue",chartColorCode:"#235EE8"},Equity:{className:"bg-light-blue",chartColorCode:"#27BCFE"}};colorsNoteCat={Relevant:{className:"turquoiseblue",chartColorCode:"#05768f"},Reliable:{className:"bg-green",chartColorCode:"#00BE82"},"Real Time":{className:"yellow",chartColorCode:"#FFDB74"}};const camelize=n=>{const t=n.replace(/[-_\s.]+(.)?/g,(n,t)=>t?t.toUpperCase():"");return`${t.substr(0,1).toLowerCase()}${t.substr(1)}`},getData=(n,t)=>{try{return JSON.parse(n.dataset[camelize(t)])}catch(i){return n.dataset[camelize(t)]}},getGrays=n=>({white:getColor("white",n),100:getColor("100",n),200:getColor("200",n),300:getColor("300",n),400:getColor("400",n),500:getColor("500",n),600:getColor("600",n),700:getColor("700",n),800:getColor("800",n),900:getColor("900",n),1e3:getColor("1000",n),1100:getColor("1100",n),black:getColor("black",n)}),getColors=n=>({primary:getColor("primary",n),secondary:getColor("secondary",n),success:getColor("success",n),info:getColor("info",n),warning:getColor("warning",n),danger:getColor("danger",n),light:getColor("light",n),dark:getColor("dark",n)}),getColor=(n,t=document.documentElement)=>getComputedStyle(t).getPropertyValue(`--falcon-${n}`).trim(),rgbaColor=(n="#fff",t=.5)=>`rgba(${hexToRgb(n)}, ${t})`,hexToRgb=n=>{let i;i=n.indexOf("#")===0?n.substring(1):n;const t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(i.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,(n,t,i,r)=>t+t+i+i+r+r));return t?[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16),]:null};var totalSalesInit=function(){function e(n){var i=n[0],r=i.name,u=i.value,f=new Date(r);return"".concat(t[0]," ").concat(f.getDate(),", ").concat(u)}var n=document.querySelector(".echart-line-total-sales"),t=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],u;if(n){var o=getData(n,"options"),i=window.echarts.init(n),f=[[60,80,60,80,65,130,120,100,30,40,30,70],[100,70,80,50,120,100,130,140,90,100,40,50],[80,50,60,40,60,120,100,130,60,80,50,60],[70,80,100,70,90,60,80,130,40,60,50,80],[90,40,80,80,100,140,100,130,90,60,70,50],[80,60,80,60,40,100,120,100,30,40,30,70],[20,40,20,50,70,60,110,80,90,30,50,50],[60,70,30,40,80,140,80,140,120,130,100,110],[90,90,40,60,40,110,90,110,60,80,60,70],[50,80,50,80,50,80,120,80,50,120,110,110],[60,90,60,70,40,70,100,140,30,40,30,70],[20,40,20,50,30,80,120,100,30,40,30,70]],r={color:getGrays()["100"],tooltip:{trigger:"axis",padding:[7,10],backgroundColor:getGrays()["100"],borderColor:getGrays()["300"],textStyle:{color:getColors().dark},borderWidth:1,formatter:function(n){return e(n)},transitionDuration:0,position:function(n,t,i,r,u){return getPosition(n,t,i,r,u)}},xAxis:{type:"category",data:["2019-01-05","2019-01-06","2019-01-07","2019-01-08","2019-01-09","2019-01-10","2019-01-11","2019-01-12","2019-01-13","2019-01-14","2019-01-15","2019-01-16"],boundaryGap:!1,axisPointer:{lineStyle:{color:getGrays()["300"],type:"dashed"}},splitLine:{show:!1},axisLine:{lineStyle:{color:rgbaColor("#000",.01),type:"dashed"}},axisTick:{show:!1},axisLabel:{color:getGrays()["400"],formatter:function(n){var i=new Date(n);return"".concat(t[i.getMonth()]," ").concat(i.getDate())},margin:15}},yAxis:{type:"value",axisPointer:{show:!1},splitLine:{lineStyle:{color:getGrays()["300"],type:"dashed"}},boundaryGap:!1,axisLabel:{show:!0,color:getGrays()["400"],margin:15},axisTick:{show:!1},axisLine:{show:!1}},series:[{type:"line",data:f[0],lineStyle:{color:getColors().primary},itemStyle:{borderColor:getColors().primary,borderWidth:2},symbol:"circle",symbolSize:10,smooth:!1,hoverAnimation:!0,areaStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:rgbaColor(getColors().primary,.2)},{offset:1,color:rgbaColor(getColors().primary,0)}]}}}],grid:{right:"28px",left:"40px",bottom:"15%",top:"5%"}};r&&i.setOption(r);n.echartSetOption(i,o,r);u=document.querySelector(".select-month");u&&u.addEventListener("change",function(n){var r=n.currentTarget.value,u=f[r];i.setOption({tooltip:{formatter:function(n){var i=n[0],u=i.name,f=i.value,e=new Date(u);return"".concat(t[r]," ").concat(e.getDate(),", ").concat(f)}},xAxis:{axisLabel:{formatter:function(n){var i=new Date(n);return"".concat(t[r]," ").concat(i.getDate())},margin:15}},series:[{data:u}]})})}},totalSalesInitTwo=function(){function e(t){var i=t[0],r=i.name,u=i.value,f=new Date(r);return"".concat(n[0]," ").concat(f.getDate(),", ").concat(u)}var t=document.querySelector(".echart-line-total-sales-2"),n=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],r;if(t){var o=getData(t,"options"),u=window.echarts.init(t),f=[[60,80,60,80,65,130,120,100,30,40,30,70],[100,70,80,50,120,100,130,140,90,100,40,50],[80,50,60,40,60,120,100,130,60,80,50,60],[70,80,100,70,90,60,80,130,40,60,50,80],[90,40,80,80,100,140,100,130,90,60,70,50],[80,60,80,60,40,100,120,100,30,40,30,70],[20,40,20,50,70,60,110,80,90,30,50,50],[60,70,30,40,80,140,80,140,120,130,100,110],[90,90,40,60,40,110,90,110,60,80,60,70],[50,80,50,80,50,80,120,80,50,120,110,110],[60,90,60,70,40,70,100,140,30,40,30,70],[20,40,20,50,30,80,120,100,30,40,30,70]],i={color:getGrays()["100"],tooltip:{trigger:"axis",padding:[7,10],backgroundColor:getGrays()["100"],borderColor:getGrays()["300"],textStyle:{color:getColors().dark},borderWidth:1,formatter:function(n){return e(n)},transitionDuration:0,position:function(n,t,i,r,u){return getPosition(n,t,i,r,u)}},xAxis:{type:"category",data:["2019-01-05","2019-01-06","2019-01-07","2019-01-08","2019-01-09","2019-01-10","2019-01-11","2019-01-12","2019-01-13","2019-01-14","2019-01-15","2019-01-16"],boundaryGap:!1,axisPointer:{lineStyle:{color:getGrays()["300"],type:"dashed"}},splitLine:{show:!1},axisLine:{lineStyle:{color:getGrays()["300"],type:"dashed"}},axisTick:{show:!1},axisLabel:{formatter:function(t){var i=new Date(t);return"".concat(n[i.getMonth()]," ").concat(i.getDate())},margin:15}},yAxis:{type:"value",axisPointer:{show:!1},splitLine:{lineStyle:{color:getGrays()["300"],type:"dashed"}},boundaryGap:!1,axisLabel:{show:!0,color:getGrays()["400"],margin:15},axisTick:{show:!1},axisLine:{show:!1}},series:[{type:"line",data:f[0],lineStyle:{color:getColors().primary},itemStyle:{borderColor:getColors().primary,borderWidth:2},symbol:"circle",symbolSize:10,smooth:!1,hoverAnimation:!0,areaStyle:{color:{type:"linear",x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:rgbaColor(getColors().primary,.2)},{offset:1,color:rgbaColor(getColors().primary,0)}]}}}],grid:{right:"28px",left:"40px",bottom:"15%",top:"5%"}};i&&typeof i=="object"&&u.setOption(i);r=document.querySelector(".select-month");r&&r.addEventListener("change",function(t){var i=t.currentTarget.value,r=f[i];u.setOption({tooltip:{formatter:function(t){var r=t[0],u=r.name,f=r.value,e=new Date(u);return"".concat(n[i]," ").concat(e.getDate(),", ").concat(f)}},xAxis:{axisLabel:{formatter:function(t){var r=new Date(t);return"".concat(n[i]," ").concat(r.getDate())},margin:15}},series:[{data:r}]})})}},defaultReportsWidget=function(){var n=$("#ddlclient option:selected").val();getAjax(`/Reports/GetDashboardReports?agencyId=${n}`,null,function(n){var i=$("#divMonthlyReports"),r=$("#divYearlyReports"),t;if(i.empty(),r.empty(),n.DataMonthly.length>0)for(t=0;t<n.DataMonthly.length;t++){let r=prepareReportMedia(n.DataMonthly[t]);i.append(r)}if(n.DataYearly.length>0)for(t=0;t<n.DataYearly.length;t++){let i=prepareReportMedia(n.DataYearly[t]);r.append(i);let u=document.getElementById("y-Report");n.DataYearly[t].FileExtention===".pdf"&&u.setAttribute("data-type","iframe")}HidelottieLoader()})};createTwilioUser=function(){postAjax("/Twilio/CreateTwilioUser",null,function(){})};