var _self = "undefined" != typeof window ? window : "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope ? self : {}, Prism = function (e) { var t = /\blang(?:uage)?-([\w-]+)\b/i, a = 0, n = { manual: e.Prism && e.Prism.manual, disableWorkerMessageHandler: e.Prism && e.Prism.disableWorkerMessageHandler, util: { encode: function e(t) { return t instanceof r ? new r(t.type, e(t.content), t.alias) : Array.isArray(t) ? t.map(e) : t.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ") }, type: function (e) { return Object.prototype.toString.call(e).slice(8, -1) }, objId: function (e) { return e.__id || Object.defineProperty(e, "__id", { value: ++a }), e.__id }, clone: function e(t, a) { var r, s; switch (a = a || {}, n.util.type(t)) { case "Object": if (a[s = n.util.objId(t)]) return a[s]; for (var i in r = {}, a[s] = r, t) t.hasOwnProperty(i) && (r[i] = e(t[i], a)); return r; case "Array": if (a[s = n.util.objId(t)]) return a[s]; return r = [], a[s] = r, t.forEach(function (t, n) { r[n] = e(t, a) }), r; default: return t } }, getLanguage: function (e) { for (; e && !t.test(e.className);)e = e.parentElement; return e ? (e.className.match(t) || [, "none"])[1].toLowerCase() : "none" }, currentScript: function () { if ("undefined" == typeof document) return null; if ("currentScript" in document) return document.currentScript; try { throw Error() } catch (e) { var t = (/at [^(\r\n]*\((.*):.+:.+\)$/i.exec(e.stack) || [])[1]; if (t) { var a = document.getElementsByTagName("script"); for (var n in a) if (a[n].src == t) return a[n] } return null } }, isActive: function (e, t, a) { for (var n = "no-" + t; e;) { var r = e.classList; if (r.contains(t)) return !0; if (r.contains(n)) return !1; e = e.parentElement } return !!a } }, languages: { extend: function (e, t) { var a = n.util.clone(n.languages[e]); for (var r in t) a[r] = t[r]; return a }, insertBefore: function (e, t, a, r) { var s = (r = r || n.languages)[e], i = {}; for (var l in s) if (s.hasOwnProperty(l)) { if (l == t) for (var o in a) a.hasOwnProperty(o) && (i[o] = a[o]); a.hasOwnProperty(l) || (i[l] = s[l]) } var u = r[e]; return r[e] = i, n.languages.DFS(n.languages, function (t, a) { a === u && t != e && (this[t] = i) }), i }, DFS: function e(t, a, r, s) { s = s || {}; var i = n.util.objId; for (var l in t) if (t.hasOwnProperty(l)) { a.call(t, l, t[l], r || l); var o = t[l], u = n.util.type(o); "Object" !== u || s[i(o)] ? "Array" !== u || s[i(o)] || (s[i(o)] = !0, e(o, a, l, s)) : (s[i(o)] = !0, e(o, a, null, s)) } } }, plugins: {}, highlightAll: function (e, t) { n.highlightAllUnder(document, e, t) }, highlightAllUnder: function (e, t, a) { var r = { callback: a, container: e, selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code' }; n.hooks.run("before-highlightall", r), r.elements = Array.prototype.slice.apply(r.container.querySelectorAll(r.selector)), n.hooks.run("before-all-elements-highlight", r); for (var s, i = 0; s = r.elements[i++];)n.highlightElement(s, !0 === t, r.callback) }, highlightElement: function (a, r, s) { var i = n.util.getLanguage(a), l = n.languages[i]; a.className = a.className.replace(t, "").replace(/\s+/g, " ") + " language-" + i; var o = a.parentElement; o && "pre" === o.nodeName.toLowerCase() && (o.className = o.className.replace(t, "").replace(/\s+/g, " ") + " language-" + i); var u = a.textContent, g = { element: a, language: i, grammar: l, code: u }; function c(e) { g.highlightedCode = e, n.hooks.run("before-insert", g), g.element.innerHTML = g.highlightedCode, n.hooks.run("after-highlight", g), n.hooks.run("complete", g), s && s.call(g.element) } if (n.hooks.run("before-sanity-check", g), !g.code) { n.hooks.run("complete", g), s && s.call(g.element); return } if (n.hooks.run("before-highlight", g), !g.grammar) { c(n.util.encode(g.code)); return } if (r && e.Worker) { var d = new Worker(n.filename); d.onmessage = function (e) { c(e.data) }, d.postMessage(JSON.stringify({ language: g.language, code: g.code, immediateClose: !0 })) } else c(n.highlight(g.code, g.grammar, g.language)) }, highlight: function (e, t, a) { var s = { code: e, grammar: t, language: a }; return n.hooks.run("before-tokenize", s), s.tokens = n.tokenize(s.code, s.grammar), n.hooks.run("after-tokenize", s), r.stringify(n.util.encode(s.tokens), s.language) }, tokenize: function (e, t) { var a = t.rest; if (a) { for (var u in a) t[u] = a[u]; delete t.rest } var g = new i; return l(g, g.head, e), function e(t, a, i, u, g, c) { for (var d in i) if (i.hasOwnProperty(d) && i[d]) { var p = i[d]; p = Array.isArray(p) ? p : [p]; for (var f = 0; f < p.length; ++f) { if (c && c.cause == d + "," + f) return; var h = p[f], m = h.inside, v = !!h.lookbehind, y = !!h.greedy, b = h.alias; if (y && !h.pattern.global) { var $ = h.pattern.toString().match(/[imsuy]*$/)[0]; h.pattern = RegExp(h.pattern.source, $ + "g") } for (var F = h.pattern || h, k = u.next, x = 0; k !== a.tail && (!c || !(x >= c.reach)); x += k.value.length, k = k.next) { var w, P = k.value; if (a.length > t.length) return; if (!(P instanceof r)) { var A = 1; if (y) { if (!(w = s(F, x, t, v))) break; var S = w.index, C = w.index + w[0].length, _ = x; for (_ += k.value.length; S >= _;)_ += (k = k.next).value.length; if (_ -= k.value.length, x = _, k.value instanceof r) continue; for (var j = k; j !== a.tail && (_ < C || "string" == typeof j.value); j = j.next)A++, _ += j.value.length; A--, P = t.slice(x, _), w.index -= x } else if (!(w = s(F, 0, P, v))) continue; var S = w.index, E = w[0], z = P.slice(0, S), T = P.slice(S + E.length), O = x + P.length; c && O > c.reach && (c.reach = O); var D = k.prev; z && (D = l(a, D, z), x += z.length), o(a, D, A); var L = new r(d, m ? n.tokenize(E, m) : E, b, E); k = l(a, D, L), T && l(a, k, T), A > 1 && e(t, a, i, k.prev, x, { cause: d + "," + f, reach: O }) } } } } }(e, g, t, g.head, 0), function e(t) { for (var a = [], n = t.head.next; n !== t.tail;)a.push(n.value), n = n.next; return a }(g) }, hooks: { all: {}, add: function (e, t) { var a = n.hooks.all; a[e] = a[e] || [], a[e].push(t) }, run: function (e, t) { var a = n.hooks.all[e]; if (a && a.length) for (var r, s = 0; r = a[s++];)r(t) } }, Token: r }; function r(e, t, a, n) { this.type = e, this.content = t, this.alias = a, this.length = 0 | (n || "").length } function s(e, t, a, n) { e.lastIndex = t; var r = e.exec(a); if (r && n && r[1]) { var s = r[1].length; r.index += s, r[0] = r[0].slice(s) } return r } function i() { var e = { value: null, prev: null, next: null }, t = { value: null, prev: e, next: null }; e.next = t, this.head = e, this.tail = t, this.length = 0 } function l(e, t, a) { var n = t.next, r = { value: a, prev: t, next: n }; return t.next = r, n.prev = r, e.length++, r } function o(e, t, a) { for (var n = t.next, r = 0; r < a && n !== e.tail; r++)n = n.next; t.next = n, n.prev = t, e.length -= r } if (e.Prism = n, r.stringify = function e(t, a) { if ("string" == typeof t) return t; if (Array.isArray(t)) { var r = ""; return t.forEach(function (t) { r += e(t, a) }), r } var s = { type: t.type, content: e(t.content, a), tag: "span", classes: ["token", t.type], attributes: {}, language: a }, i = t.alias; i && (Array.isArray(i) ? Array.prototype.push.apply(s.classes, i) : s.classes.push(i)), n.hooks.run("wrap", s); var l = ""; for (var o in s.attributes) l += " " + o + '="' + (s.attributes[o] || "").replace(/"/g, "&quot;") + '"'; return "<" + s.tag + ' class="' + s.classes.join(" ") + '"' + l + ">" + s.content + "</" + s.tag + ">" }, !e.document) return e.addEventListener && (n.disableWorkerMessageHandler || e.addEventListener("message", function (t) { var a = JSON.parse(t.data), r = a.language, s = a.code, i = a.immediateClose; e.postMessage(n.highlight(s, n.languages[r], r)), i && e.close() }, !1)), n; var u = n.util.currentScript(); function g() { n.manual || n.highlightAll() } if (u && (n.filename = u.src, u.hasAttribute("data-manual") && (n.manual = !0)), !n.manual) { var c = document.readyState; "loading" === c || "interactive" === c && u && u.defer ? document.addEventListener("DOMContentLoaded", g) : window.requestAnimationFrame ? window.requestAnimationFrame(g) : window.setTimeout(g, 16) } return n }(_self); "undefined" != typeof module && module.exports && (module.exports = Prism), "undefined" != typeof global && (global.Prism = Prism), Prism.languages.markup = { comment: /<!--[\s\S]*?-->/, prolog: /<\?[\s\S]+?\?>/, doctype: { pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i, greedy: !0, inside: { "internal-subset": { pattern: /(\[)[\s\S]+(?=\]>$)/, lookbehind: !0, greedy: !0, inside: null }, string: { pattern: /"[^"]*"|'[^']*'/, greedy: !0 }, punctuation: /^<!|>$|[[\]]/, "doctype-tag": /^DOCTYPE/, name: /[^\s<>'"]+/ } }, cdata: /<!\[CDATA\[[\s\S]*?]]>/i, tag: { pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/, greedy: !0, inside: { tag: { pattern: /^<\/?[^\s>\/]+/, inside: { punctuation: /^<\/?/, namespace: /^[^\s>\/:]+:/ } }, "attr-value": { pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/, inside: { punctuation: [{ pattern: /^=/, alias: "attr-equals" }, /"|'/] } }, punctuation: /\/?>/, "attr-name": { pattern: /[^\s>\/]+/, inside: { namespace: /^[^\s>\/:]+:/ } } } }, entity: [{ pattern: /&[\da-z]{1,8};/i, alias: "named-entity" }, /&#x?[\da-f]{1,8};/i] }, Prism.languages.markup.tag.inside["attr-value"].inside.entity = Prism.languages.markup.entity, Prism.languages.markup.doctype.inside["internal-subset"].inside = Prism.languages.markup, Prism.hooks.add("wrap", function (e) { "entity" === e.type && (e.attributes.title = e.content.replace(/&amp;/, "&")) }), Object.defineProperty(Prism.languages.markup.tag, "addInlined", { value: function e(t, a) { var n = {}; n["language-" + a] = { pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i, lookbehind: !0, inside: Prism.languages[a] }, n.cdata = /^<!\[CDATA\[|\]\]>$/i; var r = { "included-cdata": { pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i, inside: n } }; r["language-" + a] = { pattern: /[\s\S]+/, inside: Prism.languages[a] }; var s = {}; s[t] = { pattern: RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g, function () { return t }), "i"), lookbehind: !0, greedy: !0, inside: r }, Prism.languages.insertBefore("markup", "cdata", s) } }), Prism.languages.html = Prism.languages.markup, Prism.languages.mathml = Prism.languages.markup, Prism.languages.svg = Prism.languages.markup, Prism.languages.xml = Prism.languages.extend("markup", {}), Prism.languages.ssml = Prism.languages.xml, Prism.languages.atom = Prism.languages.xml, Prism.languages.rss = Prism.languages.xml, function (e) { var t = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/; e.languages.css = { comment: /\/\*[\s\S]*?\*\//, atrule: { pattern: /@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/, inside: { rule: /^@[\w-]+/, "selector-function-argument": { pattern: /(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/, lookbehind: !0, alias: "selector" }, keyword: { pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/, lookbehind: !0 } } }, url: { pattern: RegExp("\\burl\\((?:" + t.source + "|" + /(?:[^\\\r\n()"']|\\[\s\S])*/.source + ")\\)", "i"), greedy: !0, inside: { function: /^url/i, punctuation: /^\(|\)$/, string: { pattern: RegExp("^" + t.source + "$"), alias: "url" } } }, selector: RegExp("[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|" + t.source + ")*(?=\\s*\\{)"), string: { pattern: t, greedy: !0 }, property: /(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i, important: /!important\b/i, function: /[-a-z0-9]+(?=\()/i, punctuation: /[(){};:,]/ }, e.languages.css.atrule.inside.rest = e.languages.css; var a = e.languages.markup; a && (a.tag.addInlined("style", "css"), e.languages.insertBefore("inside", "attr-value", { "style-attr": { pattern: /(^|["'\s])style\s*=\s*(?:"[^"]*"|'[^']*')/i, lookbehind: !0, inside: { "attr-value": { pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/, inside: { style: { pattern: /(["'])[\s\S]+(?=["']$)/, lookbehind: !0, alias: "language-css", inside: e.languages.css }, punctuation: [{ pattern: /^=/, alias: "attr-equals" }, /"|'/] } }, "attr-name": /^style/i } } }, a.tag)) }(Prism), Prism.languages.clike = { comment: [{ pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/, lookbehind: !0, greedy: !0 }, { pattern: /(^|[^\\:])\/\/.*/, lookbehind: !0, greedy: !0 }], string: { pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/, greedy: !0 }, "class-name": { pattern: /(\b(?:class|interface|extends|implements|trait|instanceof|new)\s+|\bcatch\s+\()[\w.\\]+/i, lookbehind: !0, inside: { punctuation: /[.\\]/ } }, keyword: /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/, boolean: /\b(?:true|false)\b/, function: /\w+(?=\()/, number: /\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i, operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/, punctuation: /[{}[\];(),.:]/ }, Prism.languages.javascript = Prism.languages.extend("clike", { "class-name": [Prism.languages.clike["class-name"], { pattern: /(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:prototype|constructor))/, lookbehind: !0 }], keyword: [{ pattern: /((?:^|})\s*)(?:catch|finally)\b/, lookbehind: !0 }, { pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\s*[\[$\w\xA0-\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/, lookbehind: !0 },], function: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/, number: /\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/, operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/ }), Prism.languages.javascript["class-name"][0].pattern = /(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/, Prism.languages.insertBefore("javascript", "keyword", { regex: { pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/, lookbehind: !0, greedy: !0, inside: { "regex-source": { pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/, lookbehind: !0, alias: "language-regex", inside: Prism.languages.regex }, "regex-flags": /[a-z]+$/, "regex-delimiter": /^\/|\/$/ } }, "function-variable": { pattern: /#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/, alias: "function" }, parameter: [{ pattern: /(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/, lookbehind: !0, inside: Prism.languages.javascript }, { pattern: /(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i, inside: Prism.languages.javascript }, { pattern: /(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/, lookbehind: !0, inside: Prism.languages.javascript }, { pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/, lookbehind: !0, inside: Prism.languages.javascript }], constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/ }), Prism.languages.insertBefore("javascript", "string", { "template-string": { pattern: /`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/, greedy: !0, inside: { "template-punctuation": { pattern: /^`|`$/, alias: "string" }, interpolation: { pattern: /((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/, lookbehind: !0, inside: { "interpolation-punctuation": { pattern: /^\${|}$/, alias: "punctuation" }, rest: Prism.languages.javascript } }, string: /[\s\S]+/ } } }), Prism.languages.markup && Prism.languages.markup.tag.addInlined("script", "javascript"), Prism.languages.js = Prism.languages.javascript, function () { if ("undefined" != typeof self && self.Prism && self.document) { Element.prototype.matches || (Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector); var e = window.Prism, t = { js: "javascript", py: "python", rb: "ruby", ps1: "powershell", psm1: "powershell", sh: "bash", bat: "batch", h: "c", tex: "latex" }, a = "data-src-status", n = "loading", r = "loaded", s = "pre[data-src]:not([" + a + '="' + r + '"]):not([' + a + '="' + n + '"])', i = /\blang(?:uage)?-([\w-]+)\b/i; e.hooks.add("before-highlightall", function (e) { e.selector += ", " + s }), e.hooks.add("before-sanity-check", function (i) { var l = i.element; if (l.matches(s)) { i.code = "", l.setAttribute(a, n); var u = l.appendChild(document.createElement("CODE")); u.textContent = "Loading…"; var g = l.getAttribute("data-src"), c = i.language; if ("none" === c) { var d = (/\.(\w+)$/.exec(g) || [, "none"])[1]; c = t[d] || d } o(u, c), o(l, c); var p = e.plugins.autoloader; p && p.loadLanguages(c); var f = new XMLHttpRequest; f.open("GET", g, !0), f.onreadystatechange = function () { if (4 == f.readyState) { if (f.status < 400 && f.responseText) l.setAttribute(a, r), u.textContent = f.responseText, e.highlightElement(u); else if (l.setAttribute(a, "failed"), f.status >= 400) { var t, n; u.textContent = (t = f.status, "✖ Error " + t + " while fetching file: " + (n = f.statusText)) } else u.textContent = "✖ Error: File does not exist or is empty" } }, f.send(null) } }), e.plugins.fileHighlight = { highlight: function t(a) { for (var n, r = (a || document).querySelectorAll(s), i = 0; n = r[i++];)e.highlightElement(n) } }; var l = !1; e.fileHighlight = function () { l || (console.warn("Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead."), l = !0), e.plugins.fileHighlight.highlight.apply(this, arguments) } } function o(e, t) { var a = e.className; a = a.replace(i, " ") + " language-" + t, e.className = a.replace(/\s+/g, " ").trim() } }();