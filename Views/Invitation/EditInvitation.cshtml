@model Proven.Model.InviteUserModel

@{
    ViewBag.Title = "EditInvitation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@if (ViewData.ModelState.IsValid)
{
    if (@ViewBag.Name != null)
    {
        <b>
            ClientName : @ViewBag.ClientName<br />
            Email : @ViewBag.Email<br />
            PhoneNumber : @ViewBag.PhoneNumber<br />
            Address : @ViewBag.Address<br />
            ContactPersonName : @ViewBag.ContactPersonName
        </b>
    }
}




@using (Html.BeginForm("EditInvitation", "Invitation", FormMethod.Post))
{
    @Html.ValidationSummary(true)





    <div class="card">
        <div class="card-body overflow-hidden">
            @if (@ViewBag.Message != null)
            {

                <div class="alert alert-success">
                    <p class="mb-0">@ViewBag.Message</p>

                </div>
            }
           

            <h3 class="font-weight-normal fs-2 fs-md-3 mb-0 border-bottom pb-2">Edit Staff User </h3>

            <div class="row mt-4">
                <div class="col-12">
                    <form method="post">

                        <div class="row form-group custom-form-width">
                            <div class="col-12 col-lg-8 col-xl-5">
                                <div class="row align-items-center form-group">
                                    @Html.HiddenFor(x => x.Id)
                                    @Html.HiddenFor(x => x.Email)
                                    @Html.HiddenFor(x => x.UserId)
                                    <div class="col-12 col-md-4 col-lg-3 col-xl-4">
                                        <label for="split-login-email" class="mb-0">First Name</label>
                                    </div>
                                    <div class="col-12 col-md-8 col-lg-9 col-xl-8">
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row align-items-center form-group">
                                    <div class="col-12 col-md-4 col-lg-3 col-xl-4">
                                        <label for="split-login-email" class="mb-0">Last Name</label>
                                    </div>
                                    <div class="col-12 col-md-8 col-lg-9 col-xl-8">
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row align-items-center form-group">
                                    <div class="col-12 col-md-4 col-lg-3 col-xl-4">
                                        <label for="split-login-email" class="mb-0">Email</label>
                                    </div>
                                    <div class="col-12 col-md-8 col-lg-9 col-xl-8">
                                        @Html.HiddenFor(x => x.Email)
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                                    </div>
                                </div>

                               


                                <div class="row align-items-center form-group">
                                    <div class="col-12 col-md-4 col-lg-3 col-xl-4">
                                        <label for="split-login-email" class="mb-0">Job Title</label>
                                    </div>
                                    <div class="col-12 col-md-8 col-lg-9 col-xl-8">
                                        @Html.DropDownListFor(model => model.JobId, new SelectList(Model.JobTitlelist, "Id", "Title"), "Select a Job Title", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.JobId, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                                <div class="row align-items-center form-group">
                                    <div class="col-12 col-md-4 col-lg-3 col-xl-4">
                                        <label for="split-login-email" class="mb-0">User Role</label>
                                    </div>
                                    <div class="col-12 col-md-8 col-lg-9 col-xl-8">
                                        @Html.DropDownListFor(model => model.RoleId, new SelectList(Model.Rolelist, "Id", "DisplayRoleName"), "Select a User Role", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="row align-items-center form-group">
                                    <div class="col-12 col-md-4 col-lg-3 col-xl-4">
                                        <label for="split-login-email" class="mb-0">LinkedIn Profile</label>
                                    </div>
                                    <div class="col-12 col-md-8 col-lg-9 col-xl-8">
                                        @Html.EditorFor(model => model.LinkedInProfile, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.LinkedInProfile, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="row align-items-center form-group">
                                    <div class="col-12 col-md-4 col-lg-3 col-xl-4">
                                        <label for="split-login-email" class="mb-0">Status</label>
                                    </div>
                                    <div class="col-12 col-md-8 col-lg-9 col-xl-8">
                                        @Html.DropDownListFor(model => model.IsActive, new List<SelectListItem>() { new SelectListItem { Text = "Active", Value = "1" }, new SelectListItem { Text = "Inactive", Value = "0" } }, new { @class = "form-control text-box single-line" })
                                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@


                                <div class="row form-group">
                                    <div class="col-12 col-md-4 col-lg-3 col-xl-4">
                                    </div>
                                    <div class="col-12 col-md-8 col-lg-9 col-xl-8">
                                        <button class="btn btn-primary" type="submit" id="btnUpdate" name="submit" href="@Url.Action("EditInvitation", "Invitation")">Update</button>

                                        <input type="button" value="Cancel" class="btn btn-primary ml-2" onclick="location.href='@Url.Action("InviteStaffList", "Invitation")'" />
                                        @*<button class="btn btn-primary" type="submit" id="btnUpdate" name="" href="@Url.Action("InviteStaffList", "Invitation")">Cancel</button>*@
                                        @*@Html.ActionLink("Cancel", "InviteStaffList", "Invitation", new { }, new { @class = "btn btn-primary ml-2" })*@

                                    </div>
                                </div>



                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}





