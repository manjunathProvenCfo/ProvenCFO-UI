@using Proven.Model
@{
    ViewBag.Title = "GetNotesPage";
}

<div class="container-fluid p-0" data-layout="container">
    <div class="card mb-3">
        <div class="bg-holder d-none d-lg-block bg-card" style="background-image:url(../assets/img/illustrations/corner-4.png);">
        </div>
        <!--/.bg-holder-->



        <div class="card-body" id="v-pills-Summary">
            <div class="row">
                <div class="col-lg-9">
                    <h5 class="mb-0">Summary</h5>
                    <p class="mt-2">The MailBluster service (the “Service”) is a marketing service offered through the URL MailBluster.com (including any subdomains), our campaign sites and our email websites (together referred to as the “Website”) that allows you to create, send and manage bulk email messages to individual recipients or subscribers. Each such email message in respect of which you use the Service, including the image, text, and code comprised in it, is referred to in these Terms as “Content”). MailBluster is owned and operated by. <br />$6.25 / seat month after a trial</p>
                </div>
                <div class="col-12">
                    <div class="Words">Created by: Dave Willson , 06/21/20 | Last Edited by: Conryd Salvesen, 7/22/21  </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row scrollspy-listing">

        <div class="col-3 order-2">

            <div class="sticky-top sticky-kit right-nav-pills bg-white">

                <div class="nav flex-column nav-pills" @*id="@Categories.NoteCategory.ToString().Replace(" ", "_")"*@>
                    @foreach (var Categories in (IEnumerable<NotesCategoriesModel>)TempData["CategoriesAndNotes"])
                    {
                        <a class="nav-link active" href="#v-pills-@Categories.NoteCategory" data-fancyscroll data-offset="80">@Categories.NoteCategory</a>
                    }
                </div>
            </div>
        </div>

        <div class="col-9 order-1">
            @foreach (var Categories in (IEnumerable<NotesCategoriesModel>)TempData["CategoriesAndNotes"])
            {
                <div class="mb-3" id="v-pills-@Categories.NoteCategory">
                    <div class="card">
                        <div class="card-header d-flex align-items-center justify-content-between">
                            <h3>@Categories.NoteCategory</h3>
                            @*<div class="btn btn-light p-0"><i class="fas fa-plus"></i></div>*@
                            @*Here I am writing new line for add button for testing*@
                            <div class="dropdown">
                                <div class="btn btn-sm btn-falcon-default dropdown-toggle dropdown-caret-none" data-toggle="modal" id="notes-create-new-btn" data-target="#notes-modal-new">
                                    <span class="fas fa-plus"></span>
                                </div>
                            </div>

                        </div>
                        @if (Categories.NotesCategoriesList != null)
                        {
                            foreach (var Category in Categories.NotesCategoriesList)
                            {

                                <div class="card-body">
                                    <div class="d-flex align-items-center justify-content-between">
                                        <h6 style="color: #00BE82; "> @Category.Title</h6>
                                        <div class="d-flex align-items-center">
                                            <span class="mr-2" style="font-size: 14px;">Publish</span>
                                            <div class="custom-control custom-switch custom-control-inline  mr-0">
                                                <input class="custom-control-input" id="customSwitch1" type="checkbox" checked>
                                                <label class="custom-control-label" for="customSwitch1"></label>
                                            </div>
                                            <div class="ml-2" style=" font-size : 24px">
                                                <div class="nav-item dropdown dropdown-on-hover dots-dropdown" style="list-style: none;">
                                                    <a class="dropdown" id="dividerExample" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="font-size:24px;">
                                                        <i class="fas fa-ellipsis-v" data-fa-transform="shrink-6"></i>
                                                    </a>

                                                    <div class="dropdown-menu" aria-labelledby="dividerUSE">
                                                        <a class="dropdown-item" href="#">Edit</a>
                                                        <a class="dropdown-item" href="#">Move Up</a>
                                                        <a class="dropdown-item" href="#">Move Down</a>
                                                        <div class="dropdown-divider"></div>
                                                        <a class="dropdown-item" href="#" style="color:#E63756;">Delete</a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="ml-2" style="font-size:24px;">
                                                <i class="fas fa-check" data-fa-transform="shrink-6"></i>
                                            </div>

                                        </div>
                                    </div>
                                    <p> @Category.Description</p>

                                    <div class="Words">
                                        Created by: @Category.CreatedByUser , @Category.CreatedDate | Last Edited by: @Category.ModifiedByUser, @Category.ModifiedDate
                                        @*<hr>*@
                                    </div>
                                </div>

                            }

                        }
                    </div>
                </div>
            }
            @{ Html.RenderAction("CreateNewNotes", "Notes"); }
        </div>

    </div>

    <footer>
        <div class="row no-gutters justify-content-between fs--1 mt-4 mb-3">
            <div class="col-12 col-sm-auto text-center">
                <p class="mb-0 text-600">2021 © ProvenCFO<span class="d-none d-sm-inline-block"> </span><br class="d-sm-none" /></p>
            </div>
            <div class="col-12 col-sm-auto text-center">
                <p class="mb-0 text-600">v 0.1.2</p>
            </div>
        </div>
    </footer>
</div>

@section Scripts
    {
    <script src="~/assets/lib/tinymce/tinymce.min.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready({
            $('#notes-create-new-btn').click(function (e) {
                tinymce.get("txtDescription").getContent()
                tinymce.get("txtDescription").setContent("");
                tinyMCE.activeEditor.setContent("");
                gCurrentViewTaskId = '';
                $('#divTagView ul').empty();
                $('#divTag ul').empty();

                $('#txtNotesTitle').val('');
                $('#txtTaskTitle').val('');
                $('#previews').empty();

            });

            $("#btnCreateNewNotesDescription").click(function () {

                var Title = $('#txtNotesTitle').val();
                var NoteCatId = $('#txtNotesCatId').val();
                var AgencyId = $('#txtAgencyId').val();
                var Description = tinyMCE.activeEditor.getContent();
                var Status = $('#txtNotesStatus').val('Active');
                var IsPublished = '';
                var Status = '',

            //        ndm.Title = notesDescription.Title;
            //ndm.NoteCatId = notesDescription.NoteCatId;
            //ndm.AgencyId = notesDescription.AgencyId;
            //ndm.Description = notesDescription.Description;
            //ndm.Status = notesDescription.Status;
            //ndm.CreatedBy = LoginUserID;
            //ndm.IsDeleted = false;







                var pdata = { TaskTitle: TaskTitle, TaskDescription: Description, Assignee: Assignee, Priority: Priority, dpStartDate: dpStartDate, dpEndDate: dpEndDate, dpDueDate: dpDueDate, EstimatedHours: EstimatedHours, TaskType: TaskType, Labels: Labels };

                $.ajax({
                    type: "POST",
                    url: "/Needs/CreatNewTask",
                    data: JSON.stringify({ Task: pdata }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.Message == 'Success') {
                            window.location.reload();
                            $('.close-circle').click();
                            $('.modal-backdrop').remove();
                        }
                        else {
                            if (response.Message == 'Exist') {
                                ShowAlertBox('Required!', response.Message, 'warning');
                            }
                            else {
                                ShowAlertBox('Exist!', response.Message, 'warning');

                            }
                        }
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });

            });


        });




    </script>
}



