@model  Proven.Model.UserModel

@{
    ViewBag.Title = "Change Password";
}

<div class="card mb-3">
    <div class="card-body overflow-hidden">
        @if (@ViewBag.ErrorMessage != null)
        {
            @Html.Hidden("Validations", (object)@ViewBag.ErrorMsg, new { @id = "Validations" });
        }
        @if (@ViewBag.Message != null)
        {
            <div class="alert alert-success">
                <p>@ViewBag.Message</p>
            </div>

        }
        <div class="card-header">
            <h5 class="mb-0">Change Password</h5>
        </div>
        <div class="card-body bg-light">

            <form class="mt-3">
                <div class="form-group">
                    <label for="split-changepassword-OldPassword">Old Password</label>
                    @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control text-box single-line",@id = "txtOldPassword" })
                    @*@Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })*@
                    <span class="text-danger field-validation-error " data-valmsg-for="name" data-valmsg-replace="true"><span id="oldpasswordexist" class=""></span></span>
                </div>
                <div class="form-group">
                    <label for="split-changepassword-NewPassword">New Password</label>
                    @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control text-box single-line", @id = "txtNewPassword" })
                    @* @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })*@
                    <span class="text-danger field-validation-error " data-valmsg-for="name" data-valmsg-replace="true"><span id="valNewPassword" class=""></span></span>
                </div>
                <div class="form-group">
                    <label for="split-changepassword-ConfirmPassword">Confirm Password</label>
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control text-box single-line", @id = "txtConfirmPassword" })
                    @* @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })*@
                    <span class="text-danger field-validation-error " data-valmsg-for="name" data-valmsg-replace="true"><span id="valConfirmPassword" class=""></span></span>
                </div>
                <div class="form-group">
                    @*<button class="btn btn-primary btn-block mt-3" type="submit" >Set password</button>*@
                    <button class="btn btn-primary" id="changepass" type="button" onclick="ChangePassword()"> update Password </button>
                </div>

                @*<div class="form-group">
                        <a class="fs--1" href=@Url.Action("Index", "Home")>Back to Home</a>
                    </div>*@
                @*<a class="btn btn-primary btn-sm mt-3" href=@Url.Action("AgencySelection", "AgencyService")><span class="fas fa-home mr-2"></span>Take me home</a>*@
            </form>
        </div>
    </div>
</div>
<script>
    //var ChangePassword = function () {
    //    var model = {};
    //    model.Id = $("#Id").val();
    //    model.OldPassword = $("#OldPassword").val();
    //    model.NewPassword = $("#NewPassword").val();
    //    model.ConfirmPassword = $("#ConfirmPassword").val();


    //    $.ajax({
    //        url: '/Home/ChangePasswordFromProfile',
    //        type: 'POST',
    //        data: '{changePasswordVM: ' + JSON.stringify(model) + '}',
    //        contentType: "application/json; charset=utf-8",
    //        dataType: "json",
    //        success: function (response) {
    //            debugger
    //            if (response.resultData != null)
    //                console.log(response);
    //            ValidationSuccessMessage("Password Changed successfully!")
    //            /*return false;*/
    //        },
    //        error: function () {

    //            alert("error");
    //        }
    //    });
    //}
</script>


