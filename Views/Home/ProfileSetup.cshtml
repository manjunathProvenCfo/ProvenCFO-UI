@model  Proven.Model.UserModel
@{
    ViewBag.Title = "ProfileSetup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="content">

    <div class="row">
        <div class="col-12">
            <div class="card mb-3 btn-reveal-trigger">
                <div class="card-header position-relative min-vh-25 mb-8">
                    <div class="cover-image">
                        <div class="bg-holder rounded-soft rounded-bottom-0" id="coverPreview" style="background-image:url('@(!string.IsNullOrEmpty(Model.CoverImage) ? Model.CoverImage : "../assets/img/team/default-logo.png")');">
                        </div>
                        <!--/.bg-holder-->

                        <input class="d-none" id="upload-cover-image" type="file">
                        <label class="cover-image-file-input" for="upload-cover-image"><span class="fas fa-camera mr-2"></span><span>Change cover photo</span></label>
                    </div>
                    <div class="avatar avatar-5xl avatar-profile shadow-sm img-thumbnail rounded-circle">
                        <div class="h-100 w-100 rounded-circle overflow-hidden position-relative">
                            <img src="@(!string.IsNullOrEmpty(Model.ProfileImage) ? Model.ProfileImage : "../assets/img/team/default-logo.png")" id="previewImage" width="200" alt="" data-dz-thumbnail>
                            <input class="d-none" id="profile-image" type="file">
                            <label class="mb-0 overlay-icon d-flex flex-center" for="profile-image"><span class="bg-holder overlay overlay-0"></span><span class="z-index-1 text-white text-center fs--1"><span class="fas fa-camera"></span><span class="d-block">Update</span></span></label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row no-gutters">
        <div class="col-lg-8 pr-lg-2">
            <div class="card mb-3">
                <div class="card-header">
                    <h5 class="mb-0">Profile Settings</h5>
                </div>
                <div class="card-body bg-light">
                    <form>
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="first-name">First Name</label>
                                    @Html.HiddenFor(w => w.Id, new { @class = "form-control" })
                                    @Html.HiddenFor(w => w.CoverImage, new { @class = "form-control" })
                                    @Html.HiddenFor(w => w.ProfileImage, new { @class = "form-control" })
                                    @Html.TextBoxFor(w => w.FirstName, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="last-name">Last Name</label>

                                    @Html.TextBoxFor(w => w.LastName, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="email1">Email</label>

                                    @Html.TextBoxFor(w => w.Email, new { @class = "form-control", @readOnly = "@readOnlys" })
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label for="phone">Phone</label>
                                    @Html.TextBoxFor(w => w.PhoneNumber, new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="col-12">
                                <div class="form-group">
                                    <label for="intro">Notes</label>
                                    @Html.TextAreaFor(w => w.AboutUs, new { @class = "form-control", cols = "30", rows = "13" , MaxLength = "1000" })
                                </div>
                            </div>
                            <div class="col-12 d-flex justify-content-end">

                                @*<button class="btn btn-primary btn-block mt-3" type="submit" id="btnUpdate" name="submit" href="@Url.Action("EditInvitation", "Invitation")">Update</button>*@


                                <button class="btn btn-primary" type="button" onclick="updateProfile()">Update </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

        </div>
        <div class="col-lg-4 pl-lg-2">
            <div class="sticky-top sticky-sidebar">
                <div class="card mb-3 overflow-hidden">
                    <div class="card-header">
                        <h5 class="mb-0">Account Settings</h5>
                    </div>

                    @{

                        Html.RenderAction("ChangePasswordFromProfile", "Home");
                    }
                </div>
                <div class="card">

                    <div class="card-body bg-light">
                        <hr class="border border-dashed my-4" />
                        <h5 class="fs-0">Delete this account</h5>
                        <p class="fs--1">Once you delete a account, there is no going back. Please be certain.</p><a class="btn btn-falcon-danger d-block" href=@Url.Action("About", "Home")>Deactivate Account</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>








@section Scripts {
    <script>

        $(document).ready(function () {


            $("#profile-image").change(function () {
                var ext = $('#profile-image').val().split('.').pop().toLowerCase();
                if ($.inArray(ext, ['gif', 'png', 'jpg', 'jpeg']) == -1) {

                    ValidationErrorMessage("Invalid file extension");

                    return;
                }
                if (this.files[0].size > 1000000) {
                    ValidationErrorMessage("Please upload file less than 1MB. Thanks!!");

                    return false;
                }



                var formData = new FormData();
                formData.append("Fileupload", "Profile")
                var totalFiles = document.getElementById("profile-image").files.length;
                for (var i = 0; i < totalFiles; i++) {
                    var file = document.getElementById("profile-image").files[i];
                    formData.append("profile-image", file);
                }
                $.ajax({
                    type: "POST",
                    url: '/Home/Upload',
                    data: formData,
                    dataType: 'json',
                    contentType: false,
                    processData: false
                }).done(function (filename) {
                    if (filename != "") {
                        var path = "../Upload/Profile/" + filename;
                        $("#previewImage").attr("src", path);
                        $("#topProfilePicture").attr("src", path);
                        $("#ProfileImage").val(path);
                    }
                });
            });

            $("#upload-cover-image").change(function () {
                var ext = $('#upload-cover-image').val().split('.').pop().toLowerCase();
                if ($.inArray(ext, ['gif', 'png', 'jpg', 'jpeg']) == -1) {

                    ValidationErrorMessage("Invalid file extension");
                    return;
                }

                if (this.files[0].size > 1000000) {
                    ValidationErrorMessage("Please upload file less than 1MB. Thanks!!");
                    return false;
                }


                var formData = new FormData();
                formData.append("Fileupload", "CoverImage")
                var totalFiles = document.getElementById("upload-cover-image").files.length;
                for (var i = 0; i < totalFiles; i++) {
                    var file = document.getElementById("upload-cover-image").files[i];
                    formData.append("upload-cover-image", file);
                }
                $.ajax({
                    type: "POST",
                    url: '/Home/Upload',
                    data: formData,
                    dataType: 'json',
                    contentType: false,
                    processData: false
                }).done(function (filename) {
                    if (filename != "") {
                        var path = "../Upload/CoverProfile/" + filename;
                        $('#coverPreview').css('background-image', 'url(' + path + ')');
                        $("#CoverImage").val(path);

                    }
                });
            });

            $("#txtOldPassword").keyup(function () {
                if (!this.value || this.value.length > 0 ) {
                    $('#oldpasswordexist').hide();
                    $('#oldpasswordexist').html('');   
                }
            });
            $("#txtNewPassword").keyup(function () {
                if (!this.value || this.value.length > 0 ) {
                    $('#valNewPassword').hide();
                    $('#valNewPassword').html('');
                }
            });
            $("#txtConfirmPassword").keyup(function () {
                if (!this.value || this.value.length > 0 ) {
                    $('#valConfirmPassword').hide();
                    $('#valConfirmPassword').html('');
                }
            });

        });



        var updateProfile = function () {


            var model = {};
            model.FirstName = $("#FirstName").val();
            model.LastName = $("#LastName").val();
            model.AboutUs = $("#AboutUs").val();
            model.PhoneNumber = $("#PhoneNumber").val();
            model.Email = $("#Email").val();
            model.CoverImage = $("#CoverImage").val();
            model.ProfileImage = $("#ProfileImage").val();
            model.Id = $("#Id").val();


            if (model.FirstName == null || model.FirstName == "") {
                ValidationWarningMessage("First name is required!")
                return false;
            }

            if (model.LastName == null || model.LastName == "") {
                ValidationWarningMessage("Last name is required!")
                return false;
            }




            $.ajax({
                url: '/Home/UpdateProfile',
                type: 'POST',
                data: '{model: ' + JSON.stringify(model) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    ValidationSuccessMessage1("Record updated successfully!")
                    return false;
                },
                error: function () {
                    alert("error");
                }
            });

        }
        $('#oldpasswordexist').hide();
        $('#oldpasswordexist').html();
        //document.getElementById("oldpasswordexist").style.display = "none";
        function CheckExistValidation() {
            if ($("#name").val() == "" && $("#oldpasswordexist").html() !== "") {
                $('#oldpasswordexist').hide();
                $("#oldpasswordexist").html('');
            }
        }

        var ChangePassword = function () {
            var model = {};
            model.Id = $("#Id").val();
            model.OldPassword = $("#txtOldPassword").val();
            model.NewPassword = $("#txtNewPassword").val();
            model.ConfirmPassword = $("#txtConfirmPassword").val();
            ChangePasswordClear();
            var validation = true;
            if (model.OldPassword != undefined && model.OldPassword == '') {
                $('#oldpasswordexist').show();
                $('#oldpasswordexist').html('Old password is a required field'); 
                validation = false;
            }
            if (model.NewPassword != undefined && model.NewPassword == '') {
                $('#valNewPassword').show();
                $('#valNewPassword').html('New passsword is a required field.');
                validation = false;
            }
            if (model.ConfirmPassword != undefined && model.ConfirmPassword == '') {
                $('#valConfirmPassword').show();
                $('#valConfirmPassword').html('Confirm passsword is a required field.');
                validation = false;
            }
            if (model.NewPassword != model.ConfirmPassword ) {
                $('#valConfirmPassword').show();
                $('#valConfirmPassword').html('New password and confirm password did not matched.');
                validation = false;
            }
            if (validation == false) {
                return false;
            }

            $.ajax({
                url: '/Home/ChangePasswordFromProfile',
                type: 'POST',
                data: '{changePasswordVM: ' + JSON.stringify(model) + '}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    
                    if (response.sucess == true) {
                        ValidationSuccessMessage("Password changed successfully!")
                    }
                    else {   
                        ChangePasswordClear();
                        if (response.ErrorMsg != undefined && response.ErrorMsg != '' && response.Target == 'OldPassword') {
                           
                            $('#oldpasswordexist').show();
                            $('#oldpasswordexist').html(response.ErrorMsg);                                                      
                        }    
                        if (response.ErrorMsg != undefined && response.ErrorMsg != '' && response.Target == 'BOTH') {
                            $('#valNewPassword').show();
                            $('#valNewPassword').html(response.ErrorMsg);

                            $('#valConfirmPassword').show();
                            $('#valConfirmPassword').html(response.ErrorMsg);
                        }  
                        if (response.ErrorMsg != undefined && response.ErrorMsg != '' && response.Target == 'ConfirmPassword') {
                            $('#valConfirmPassword').show();
                            $('#valConfirmPassword').html(response.ErrorMsg);
                        }
                        if (response.ErrorMsg != undefined && response.ErrorMsg != '' && response.Target == 'NewPassword') {
                            $('#valNewPassword').show();
                            $('#valNewPassword').html(response.ErrorMsg);
                        }
                    }
                }
            });
        }
        function ChangePasswordClear() {
            $('#oldpasswordexist').hide();
            $('#oldpasswordexist').html('');   
            $('#valNewPassword').hide();
            $('#valNewPassword').html('');
            $('#valConfirmPassword').hide();
            $('#valConfirmPassword').html('');
        }

        ////////// VALICATION MESSAGE////////////////

        function AddAlertMsg() {
            sweetAlert
                ({
                    title: "Sent!",
                    text: "Agency User invitation has been sent.",
                    type: "success"
                },
                    function () {
                        window.location.href = '/Invitation/RegisteredUserList'
                    });
        }

        function ValidationWarningMessage(message) {
            swal({
                title: "Warning",
                text: message,
                type: "warning",
                timer: 3000
            });
        }
        function ValidationSuccessMessage1(message) {
            swal({
                title: "Sucess",
                text: message,
                type: "success",
                timer: 3000
            },
                function () {
                    window.location.href = '/Home/ProfileSetup'
                });
        }
        function ValidationSuccessMessage(message) {
            swal({
                title: "Sucess",
                text: message,
                type: "success",
                timer: 3000
            },
                function () {
                    window.location.href = '/Home/Login'
                });
        }
        function ValidationErrorMessage(message) {
            swal({
                title: "Error",
                text: message,
                type: "error",
                timer: 3000
            });

        }

        function ExistAlertRole() {
            sweetAlert
                ({
                    title: "Exist!",
                    text: "This User Role is exist!",
                    type: "warning"
                },
                    function () {
                        //window.location.href = '/Role/Role'
                    });
        }





                                                                /////////END///////////////////////////////////

    </script>
}