@model ProvenCfoUI.Models.ChangePasswordViewModel

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_LayoutDefault.cshtml";

}
@Styles.Render("~/assets/AvertaWebFont/provencfo.css")
@Styles.Render("~/bundles/customcss")
@Scripts.Render("~/bundles/modernizr")
@if (ViewData.ModelState.IsValid)
{
    if (@ViewBag.Name != null)
    {
        <b>
            OldPassword : @ViewBag.OldPassword<br />
            NewPassword : @ViewBag.NewPassword<br />
            ConfirmPassword : @ViewBag.ConfirmPassword
        </b>
    }
}

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)



    <div class="row flex-center min-vh-100 py-6">
        <div class="col-sm-10 col-md-8 col-lg-6 col-xl-5 col-xxl-4">
            <div class="d-flex flex-center mb-4"><img class="mr-2" src="~/assets/img/illustrations/falcon.png" alt="" width="150" />@*<span class="text-sans-serif font-weight-extra-bold fs-5 d-inline-block">ProvenCFO</span>*@</div>
            @if (@ViewBag.ErrorMessage != null)
            {
                <div class="alert alert-danger">
                    <p>@ViewBag.ErrorMessage</p>
                </div>
            }
            @if (@ViewBag.Success != null)

            {
                <div class="alert alert-success">
                    <p>@ViewBag.Success</p>
                </div>
            }
            <div class="card">

                <div class="card-body p-4 p-sm-5">

                    <h5 class="text-center">Reset new password</h5>
                    <form class="mt-3">
                        <div class="form-group">
                            <label for="split-changepassword-OldPassword">Old Password</label>
                            @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control text-box single-line" })
                            @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="split-changepassword-NewPassword">New Password</label>
                            @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control text-box single-line" })
                            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="split-changepassword-ConfirmPassword">Confirm Password</label>
                            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control text-box single-line" })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <button class="btn btn-primary btn-block mt-3" type="submit" name="submit">Set password</button>
                        </div>

                        <div class="form-group">
                            @*<a class="fs--1" href=@Url.Action("Index", "Home")>Back to Home</a>*@
                            <a class=" btn-sm mt-3" href="/AgencyService/AgencyHome">Back to Home</a>                     
                        </div>
                        @*<a class="btn btn-primary btn-sm mt-3" href=@Url.Action("Index","Home")><span class="fas fa-home mr-2"></span>Take me home</a>*@
                    </form>
                    @*<a class="btn btn-primary btn-sm mt-3" href=@Url.Action("Index","Home")><span class="fas fa-home mr-2"></span>Take me home</a>*@
                </div>
            </div>
        </div>
    </div>

}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}

