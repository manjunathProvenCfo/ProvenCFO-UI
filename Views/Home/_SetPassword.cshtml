@model ProvenCfoUI.Models.SetPasswordViewModel
@{
    ViewBag.Title = "SetPassword";
    Layout = "~/Views/Shared/_LayoutDefault.cshtml";
}
   

@Styles.Render("~/bundles/customcss")
@if (ViewData.ModelState.IsValid)
{
    if (@ViewBag.Name != null)
    {
        <b>
            NewPassword : @ViewBag.NewPassword<br />
            ConfirmPassword : @ViewBag.ConfirmPassword
        </b>
    }
}
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <p>@ViewBag.ErrorMessage</p>

    <div class="container" data-layout="container">
        <div class="row flex-center min-vh-100 py-6">
            <div class="col-sm-10 col-md-8 col-lg-6 col-xl-5 col-xxl-4">
                <a class="d-flex flex-center mb-4" href=@Url.Action("Index","Home")><img class="mr-2" src="~/assets/img/illustrations/falcon.png" alt="" width="150" />@*<span class="text-sans-serif font-weight-extra-bold fs-5 d-inline-block">ProvenCFO</span>*@</a>
                <div class="card">
                    <div class="card-body p-4 p-sm-5">
                        <h5 class="text-center">Set New Password</h5>
                        <form class="mt-3">
                            @*<div class="form-group">
                                    <label for="split-changepassword-UserId">UserId</label>
                                    @Html.TextBoxFor(model => model.userId, new { @class = "form-control text-box single-line" })
                                    @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                                </div>*@
                            @*<div class="form-group">
                                    <label for="split-changepassword-NewPassword">New Password</label>
                                    @Html.HiddenFor(model => model.token, new { @class = "form-control text-box single-line" })
                                    @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                                </div>*@
                            <div class="form-group">
                                <label for="split-changepassword-NewPassword">New Password</label>
                                @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control text-box single-line" })
                                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label for="split-changepassword-ConfirmPassword">Confirm Password</label>
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control text-box single-line" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                            <button class="btn btn-primary btn-block mt-3" type="submit" name="submit">Set password</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}


