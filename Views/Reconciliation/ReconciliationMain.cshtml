@model IEnumerable<Proven.Model.reconciliationVM>
@{ ViewBag.Title = "ReconciliationMain";
    Layout = "~/Views/Shared/_Layout.cshtml"; }
<style>
    .tabselect {
        text-decoration: underline;
    }
</style>

<!--<div class="card mb-4 ">
    <div class="card-header">
        <div class="row align-items-center justify-content-between">
            <div class="col-6 col-sm-auto d-flex align-items-center pr-0">
                <h5 class="fs-0 mb-0 text-nowrap py-2 py-xl-0">Reconciliation</h5>
            </div>
            <div class="col-6 col-sm-auto ml-auto text-right pl-0">
                <div class="d-none" id="purchases-actions">
                    <div class="input-group input-group-sm">
                        <select class="custom-select cus" aria-label="Bulk actions">
                            <option selected="">Bulk actions</option>
                            <option value="Delete">Delete</option>
                            <option value="Archive">Archive</option>
                        </select>
                        <button class="btn btn-falcon-default btn-sm ml-2" type="button">Submit</button>
                    </div>
                </div>
                <div id="dashboard-actions">-->
@*<button class="btn btn-falcon-default btn-sm" type="button">
        <span class="fas fa-plus" data-fa-transform="shrink-3 down-2"></span>
        <span class="d-none d-sm-inline-block ml-1"><a href=@Url.Action("CreateClient", "Client")>Create</a></span>
    </button>*@
@*<button class="btn btn-falcon-default btn-sm mx-2" type="button"><span class="fas fa-filter" data-fa-transform="shrink-3 down-2"></span><span class="d-none d-sm-inline-block ml-1">filter</span></button>*@
@*<button class="btn btn-falcon-default btn-sm ml-2" type="button">
        <span class="fas fa-external-link-alt" data-fa-transform="shrink-3 down-2"></span>
        <span class="d-none d-sm-inline-block ml-1" onclick="ExportToExcel()">Export</span>
    </button>*@
<!--<button class="btn btn-falcon-default btn-sm ml-2" type="button">
                    <span class="fas fa-external-link-alt" data-fa-transform="shrink-3 down-2"></span>
                    <span class="d-none d-sm-inline-block ml-1">
                        <a href=@Url.Action("AgencyHome", "AgencyService")>Back to dashboard</a>
                    </span>
                </button>
            </div>
        </div>
    </div>
</div>-->
<!--<div class="card-body px-0 pt-0">
    <!--<div class="row no-gutters">-->
<!--@*@Html.Partial("_AgencySelection")*@
@*@{
    Html.RenderAction("AgencySelection", "AgencyService");
}*@-->
<!--<div class="col-lg-3 col-xl-12 pl-lg-2 pl-xl-0 mb-3" id="divClientDetials">

    </div>
</div>-->
<!--</div>
</div>-->
<div class="row">
    <div class="col-md-12" id="divTable">
        <div class="card mb-3">
            <div class="card-header">
                <div class="row align-items-center justify-content-between">
                    <div class="col-6">
                        <div class="row align-items-center">
                            <div class="d-flex align-items-center ml-3" id="tabNotinBooks" onclick="Tabclick(event,0);">
                                <span class="fas fa-book"></span>
                                <h6 class="mb-0 ml-2"><a href="@Url.Action("GetReconcilation", "Reconciliation", new { Type = "Not in Books" })">Not in Books</a></h6>
                                <span class="badge badge-pill badge-soft-danger ml-3" id="lblNotInBooksCount">0</span>
                            </div>

                            <div class="d-flex align-items-center ml-5" id="tabNotinBanks" onclick="Tabclick(event,1);">
                                <span class="far fa-credit-card"></span>
                                <h6 class="mb-0 ml-2"><a href="@Url.Action("GetReconcilation", "Reconciliation", new { Type = "Not in Banks" })">Not in Banks</a></h6>
                                <span class="badge badge-pill badge-soft-danger ml-3" id="lblNotInBanksCount">0</span>
                            </div>
                        </div>
                    </div>



                    <div class="col-6 col-sm-auto ml-auto text-right pl-0">
                        @*<div class="d-none" id="purchases-actions">
                            <div class="input-group input-group-sm">
                                <select class="custom-select cus" aria-label="Bulk actions">
                                    <option selected="">Bulk actions</option>
                                    <option value="Refund">Refund</option>
                                    <option value="Delete">Delete</option>
                                    <option value="Archive">Archive</option>
                                </select>
                                <button class="btn btn-falcon-default btn-sm ml-2" type="button">Apply</button>
                            </div>
                        </div>*@
                        <div class="d-flex align-items-center">
                            <div class="d-flex">

                                <button class="btn btn-falcon-default btn-sm mx-1" id="ibulkupdate" type="button"><span class="fas fa-edit " data-fa-transform="shrink-3 down-2 m-2 p"></span><span class="d-none d-sm-inline-block "></span></button>
                                <button class="btn btn-falcon-default btn-sm mx-1 " type="button"><span class="fas fa-envelope" data-fa-transform="shrink-3 down-2"></span><span class="d-none d-sm-inline-block "></span></button>
                                <button class="btn btn-falcon-default btn-sm mx-1 " id="ichat" type="button"><span class="fas fa-comment-dots" data-fa-transform="shrink-3 down-2"></span><span class="d-none d-sm-inline-block "></span></button>
                                <button class="btn btn-falcon-default btn-sm mx-1" id="Filter" type="button"><span class="fas fa-filter" data-fa-transform="shrink-3 down-2"></span><span class="d-none d-sm-inline-block "></span></button>
                            </div>
                            @*<div class="form-group position-relative mb-0">
                                    <input type="text" class="form-control mr-3" id="inputGroup" placeholder="Search...">

                                </div>*@

                        </div>





                    </div>
                </div>
            </div>
            <div class="card-body px-0 pt-0">
                <div class="dashboard-data-table table-responsive">
                    <table class="table table-sm table-dashboard fs--1 data-table border-bottom" id="tblreconcilation" data-options='{"responsive":true,"pagingType":"simple","lengthChange":true,"searching":true,"pageLength":8,"columnDefs":[{"targets":[0,6],"orderable":true,"width":10%}],"language":{"info":"_START_ to _END_ Items of _TOTAL_ — <a href=\"#!\" class=\"font-weight-semi-bold\"> A Cherry Blossom <span class=\"fas fa-angle-right\" data-fa-transform=\"down-1\"></span> </a>"},"buttons":["copy","excel"]}'>
                        <thead class="bg-200 text-900">
                            <tr>
                                <th class="no-sort pr-1 align-middle data-table-row-bulk-select">
                                    <div class="custom-control custom-checkbox">
                                        <input class="custom-control-input checkbox-bulk-select" id="checkbox-bulk-purchases-select" type="checkbox" data-checkbox-body="#purchases" data-checkbox-actions="#purchases-actions" data-checkbox-replaced-element="#dashboard-actions" />
                                        <label class="custom-control-label" for="checkbox-bulk-purchases-select"></label>
                                    </div>
                                </th>
                                <th class="sort pr-1 align-middle">Account</th>
                                <th class="sort pr-1 align-middle">Date</th>
                                <th class="sort pr-1 align-middle">Who</th>
                                <th class="sort pr-1 align-middle">Description</th>
                                <th class="sort pr-1 align-middle">Amount</th>
                                <th></th>

                                @if (TempData["GLAccounts"] != null && ((List<Proven.Model.XeroGlAccountVM>)TempData["GLAccounts"]).Count > 0)
                                {
                                    <th class="sort pr-1 align-middle">GL Account</th>
                                } @*<th></th>*@
                                @if (ViewBag.IsBankRuleVisible == true)
                                {
                                    <th class="sort pr-10 align-center ">Rule</th>
                                }
                                @if (TempData["TrackingCategories"] != null && ViewBag.IsBankRuleVisible == true)
                                {
                                    foreach (var tcgroup in (List<Proven.Model.XeroTrackingOptionGroupVM>)TempData["TrackingCategories"])
                                    {
                                        <th class="sort pr-10 align-center ">@tcgroup.Name</th>
                                    }

                                }



                            </tr>
                        </thead>
                        <tbody id="purchases">
                            @foreach (var item in (List<Proven.Model.reconciliationVM>)TempData["ReconcilationData"])
                            {

                                <tr class="btn-reveal-trigger cursor-pointer">
                                    <td class="align-middle">
                                        <div class="custom-control custom-checkbox">
                                            <input class="custom-control-input checkbox-bulk-select-target" type="checkbox" id="@item.id" value="@item.Selected" />

                                            <label class="custom-control-label" for="@item.id"></label>
                                        </div>
                                    </td>
                                    <td class="sort pr-1 align-middle col-xs-2"> @Html.DisplayFor(modelItem => item.account_name)</td>
                                    <td class="sort pr-1 align-middle col-xs-1">@Html.DisplayFor(modelItem => item.date)</td>
                                    <td class="sort pr-1 align-middle col-xs-1" data-toggle="tooltip" title="@item.description">@Html.DisplayFor(modelItem => item.description_display) </td>
                                    <td class="sort pr-1 align-middle col-xs-2" data-toggle="tooltip" title="@item.reference">@Html.DisplayFor(modelItem => item.reference_display)</td>
                                    @if (item.amount < 0)
                                    {@*<td class="sort pr-1 align-middle text-danger col-xs-1">$(@Html.DisplayFor(modelItem => item.amount))</td>*@
                                    <td class="sort pr-1 align-middle text-danger col-xs-1">@Convert.ToString(Html.DisplayFor(modelItem => item.amount)).Replace("-", "")</td>
                                }
                                else
                                { @*<td class="sort pr-1 align-middle col-xs-1">$@Html.DisplayFor(modelItem => item.amount)</td>*@
                                <td class="sort pr-1 align-middle col-xs-1"> @Html.DisplayFor(modelItem => item.amount)</td>
                            }
                                    <td class="sort pr-1 align-middle"><span id="iconComments" data-id="@item.id"><i class="fa fa-comment mr-1"></i></span></td>
                                    @if (TempData["GLAccounts"] != null && ((List<Proven.Model.XeroGlAccountVM>)TempData["GLAccounts"]).Count > 0)
                                    {
                                        <td class="sort pr-1 align-middle col-xs-1">
                                            <div class="row justify-content-between">
                                                <div class="col-auto">

                                                    @*@Html.DropDownList("gl_account", new SelectList(ViewBag.GLAccounts, "Id", "Name"), "Pick Account", new { @class = "form-control" })*@
                                                    @Html.DropDownListFor(modelItem1 => item.gl_account_ref, new SelectList((List<Proven.Model.XeroGlAccountVM>)TempData["GLAccounts"], "Id", "Name", item.gl_account_ref), "Pick Account", new { @class = "form-control", @onchange = "javascript:onChangeglAccount('" + item.id + "',event)" })
                                                </div>
                                            </div>
                                        </td>
                                    } @*<td class="sort pr-1 align-middle"><span class="fas fa-plus-circle"></span></td>*@
                                    @if (ViewBag.IsBankRuleVisible == true)
                                    {
                                        <td class="sort pr-1 align-middle col-xs-1">
                                            <div class="row justify-content-between">
                                                <div class="col-auto">
                                                    @Html.DropDownListFor(modelItem1 => item.rule, new SelectList((List<SelectListItem>)TempData["BankRule"], "Value", "Text", item.rule), "Set Rule", new { @class = "form-control", @onchange = "javascript:onChangeBankRule('" + item.id + "',event)" })
                                                </div>
                                            </div>
                                        </td>
                                    }
                                    @if (TempData["TrackingCategories"] != null && ViewBag.IsBankRuleVisible == true)
                                    {
                                        int count = 0;
                                        foreach (var tcgroup in (List<Proven.Model.XeroTrackingOptionGroupVM>)TempData["TrackingCategories"])
                                        {

                                            <td class="sort pr-1 align-middle col-xs-1">
                                                <div class="row justify-content-between">
                                                    <div class="col-auto">
                                                        @if (count == 0)
                                                        {
                                                            @Html.DropDownListFor(modelItem => item.tracking_category_ref, new SelectList(tcgroup.Options, "Id", "Option", item.tracking_category_ref), "Select " + @tcgroup.Name, new { @class = "form-control", @onchange = "javascript:onChangeTc('" + item.id + "',event)" }) }
                                                        else
                                                        {
                                                            @Html.DropDownListFor(modelItem => item.additional_tracking_category_ref, new SelectList(tcgroup.Options, "Id", "Option", item.additional_tracking_category_ref), "Select " + @tcgroup.Name, new { @class = "form-control", @onchange = "javascript:onChangeAditinalTc('" + item.id + "',event)" })}

                                                    </div>
                                                </div>
                                            </td>
                                            count++;
                                        }

                                    }

                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4 p-l-2 d-none" id="divChat">
        @Html.Partial("_communication", true)
    </div>
    <div class="col-md-4 p-l-2 d-none" id="divFilter">
        @Html.Partial("_reconcilationFilter", true)
    </div>
    <div class="col-md-4 p-l-2 d-none" id="divBulkUpdate">
        @Html.Partial("_reconcilationBulkupdate", true)

    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/js/table");
    @Scripts.Render("~/bundles/js/twilio-chat")
    <script>
        $(document).ready(function () {
            chat.userId = "@ViewBag.UserId";
            chat.userEmail = "@ViewBag.UserEmail";
            hideParticipantsSidebar();
        });
    </script>
    <script>
            $(document).ready(function () {
                        bindNotInBooksAndBanksCount();
                        bindNotInBooksAndBanksCountDashboard();
			            LoadFilterData();
                        //AgencyDropdownPartialViewChange();
                        var type = sessionStorage.getItem('Type');
                        $('#divFilter').hide();
                        $('#divChat').hide();
                sessionStorage.removeItem('SelectedRecords');
                sessionStorage.removeItem('UnSelectedRecords');
                        if (type != null) {

                            if (type == "0") {
                                $('#tabNotinBooks').addClass('tabselect');
                                $('#tabNotinBanks').removeClass('tabselect');
                            }
                            else {
                                $('#tabNotinBooks').removeClass('tabselect');
                                $('#tabNotinBanks').addClass('tabselect');
                            }
                        }
                        else {
                            $('#tabNotinBooks').addClass('tabselect');
                            $('#tabNotinBanks').removeClass('tabselect');
                        }

                        $('#tblreconcilation tbody tr').click(function () {
                            $(this).addClass('bg-300').siblings().removeClass('bg-300');

                });
                $('span[id=iconComments]').click(function () {
                 $('#divFilter').hide();
                 $('#divFilter').addClass('d-none');
                 $('#divChat').show();
                 $('#divChat').removeClass('d-none');
                 $('#divTable').addClass('col-md-8').removeClass('col-md-12');

                    let channelUniqueNameGuid = $(this).data().id;
                    chat.publicChannelUniqueNameGuid = channelUniqueNameGuid;
                    loadChatPage(true,1);
                });

                        $('#Cancel').click(function () {
                            if ($('#divTable')[0].className.indexOf('col-md-8') != -1) {
                                $('#divTable').addClass('col-md-12').removeClass('col-md-8');
                                $('#divChat').hide();
                            }
                            else {
                                $('#divTable').addClass('col-md-8').removeClass('col-md-12');
                                $('#divChat').show();
                            }
                        });
                        $('#Filter').click(function () {
                            if ($("#divChat").is(":visible")) {
                                $('#divChat').hide();
                                $('#divChat').addClass('d-none');
                                $('#divBulkUpdate').hide();
                                $('#divBulkUpdate').addClass('d-none');
                                $('#divFilter').show();
                                $('#divFilter').removeClass('d-none');

                            }
                            else if ($("#divFilter").is(":visible") || $("#divBulkUpdate").is(":visible")) {
                                $('#divChat').hide();
                                $('#divChat').addClass('d-none');
                                $('#divFilter').hide();
                                $('#divFilter').addClass('d-none');
                                $('#divBulkUpdate').hide();
                                $('#divBulkUpdate').addClass('d-none');
                                $('#divTable').addClass('col-md-12').removeClass('col-md-8');
                            }
                            else {
                                $('#divFilter').show();
                                $('#divFilter').removeClass('d-none');
                                $('#divTable').addClass('col-md-8').removeClass('col-md-12');
                            }
                        });
                $('#ichat').click(function () {
                    if ($("#divChat").is(":visible")) {
                        $('#divChat').hide();
                        $('#divChat').addClass('d-none');
                        $('#divFilter').hide();
                        $('#divBulkUpdate').hide();
                        $('#divBulkUpdate').addClass('d-none');
                        $('#divFilter').addClass('d-none');
                        $('#divTable').addClass('col-md-12').removeClass('col-md-8');

                    }
                    else if ($("#divFilter").is(":visible") || $("#divBulkUpdate").is(":visible") ) {
                        $('#divChat').hide();
                        $('#divChat').addClass('d-none');
                        $('#divFilter').hide();
                        $('#divFilter').addClass('d-none');
                        $('#divBulkUpdate').hide();
                        $('#divBulkUpdate').addClass('d-none');
                        $('#divTable').addClass('col-md-12').removeClass('col-md-8');
                    }
                    else {
                        $('#divChat').show();
                        $('#divChat').removeClass('d-none');
                        $('#divTable').addClass('col-md-8').removeClass('col-md-12');
                    }
                });
                $('#ibulkupdate').click(function () {
                    if ($("#divFilter").is(":visible") || $("#divChat").is(":visible")) {
                        $('#divChat').hide();
                        $('#divChat').addClass('d-none');
                        $('#divBulkUpdate').show();
                        $('#divBulkUpdate').removeClass('d-none');
                        $('#divFilter').hide();
                        $('#divFilter').addClass('d-none');
                    }
                    else if ($("#divBulkUpdate").is(":visible")) {
                        $('#divBulkUpdate').hide();
                        $('#divBulkUpdate').addClass('d-none');
                        $('#divTable').addClass('col-md-12').removeClass('col-md-8');
                    }
                    else {
                        $('#divBulkUpdate').show();
                        $('#divBulkUpdate').removeClass('d-none');
                        $('#divTable').addClass('col-md-8').removeClass('col-md-12');
                    }
                });

                        $('#Cancel1').click(function () {
                            if ($('#divTable')[0].className.indexOf('col-md-8') != -1) {
                                $('#divTable').addClass('col-md-12').removeClass('col-md-8');
                                $('#divTable1').addClass('d-none');
                                $('#divChat').hide();
                                $('#divFilter').hide();
                                $('#divFilter').addClass('d-none');
                            }
                            else {
                                $('#divTable').addClass('col-md-8').removeClass('col-md-12');
                                $('#divTable1').removeClass('d-none');
                                $('#divChat').show();
                            }
                        });
                $('#CancelBulkupdate').click(function () {
                    if ($('#divTable')[0].className.indexOf('col-md-8') != -1) {
                        $('#divTable').addClass('col-md-12').removeClass('col-md-8');
                        $('#divTable1').addClass('d-none');
                        $('#divChat').hide();
                        $('#divFilter').hide();
                        $('#divFilter').addClass('d-none');
                    }
                    else {
                        $('#divTable').addClass('col-md-8').removeClass('col-md-12');
                        $('#divBulkUpdate').removeClass('d-none');
                        $('#divBulkUpdate').show();
                    }
                });
                $('.checkbox-bulk-select-target').change(function (e) {
                    if (this.checked) {
                        var SelectedItems = sessionStorage.getItem('SelectedRecords') != null ? sessionStorage.getItem('SelectedRecords') + ',' + e.target.id : e.target.id;
                        sessionStorage.setItem('SelectedRecords', SelectedItems);
                    }
                    else {
                        var UnSelectedItems = sessionStorage.getItem('UnSelectedRecords') != null ? sessionStorage.getItem('UnSelectedRecords') + ',' + e.target.id : e.target.id;
                        sessionStorage.setItem('UnSelectedRecords', UnSelectedItems);
                    }
                });


            });
        function FillterReset() {
            sessionStorage.removeItem('Filter');
            var url = '@Url.Action("ReconciliationMain", "Reconciliation")';
            window.location.href = url;
        }
        function BulkActionCancel() {

            ShowConfirmBoxWarning("Are you sure?", "Do you really want to cancel the bulk action?", "Yes, cancel it!", function (isConfirmed) {
                if (isConfirmed == false)
                    return;
                sessionStorage.removeItem('SelectedRecords');
                sessionStorage.removeItem('UnSelectedRecords');
                var url = '@Url.Action("ReconciliationMain", "Reconciliation")';
                window.location.href = url;
            });

        }
        function FillterReconcilation() {
            var account = $('#filteraccounts').val().join(',');
            var ClientID = $("#ddlclient option:selected").val();
            var fromDate, toDate;
            var filterReconcilationcategories = 0;
            var IsNotinBooks = $('#tabNotinBooks').hasClass('tabselect');
            var type = 'Outstanding Payments';
            if (IsNotinBooks == true) {
                type = 'Unreconciled';
            }

            if ($('#rb1').prop('checked') == true) {
                filterReconcilationcategories = 1;
            }
            else if ($('#rb2').prop('checked') == true) {
                filterReconcilationcategories = 2;
            }
            else if ($('#rb3').prop('checked') == true) {
                filterReconcilationcategories = 3;
            }

            var datepicker = $("#timepicker2").val();
            if (datepicker.includes("to")) {
                this.fromDate = datepicker.substring(0, datepicker.indexOf("to")).trim();
                this.toDate = datepicker.substring(datepicker.indexOf("to") + 2).trim();
            } else {
                this.fromDate = datepicker;
                this.toDate = datepicker;
            }
            var MinAmount = $("#filterMinAmount").val();
            var MaxAmount = $("#filterMaxAmount").val();
            var bankrule = $("#bankrule").val().join(',');
            var TrackingCategories = $("#TrackingCategories").val() != undefined ? $("#TrackingCategories").val().join(',') :'';
            var TrackingCategories_1 = $("#TrackingCategories_1").val() != undefined? $("#TrackingCategories_1").val().join(','):'';
            var pdata = {
                accounts: account,
                dateRangeFrom: this.fromDate,
                dateRangeTo: this.toDate,
                amountMin: MinAmount,
                amountMax: MaxAmount,
                Bankrule: bankrule,
                TrackingCategory1: TrackingCategories,
                TrackingCategory2: TrackingCategories_1,
                FilterType: filterReconcilationcategories,
                AgencyID: ClientID,
                Type: type,
                selectedDate: datepicker
            }
            sessionStorage.setItem('Filter', JSON.stringify(pdata));

            var url = '@Url.Action("GetFilteredReconcilation", "Reconciliation", new { accounts = "_accounts",
                              dateRangeFrom = "_dateRangeFrom",
                              dateRangeTo = "_dateRangeTo",
                              amountMin = "_amountMin",
                              amountMax = "_amountMax",
                              Bankrule = "_Bankrule",
                              TrackingCategory1 = "_TrackingCategory1",
                              TrackingCategory2 = "_TrackingCategory2",
                              FilterType = "_FilterType",
                              AgencyID = "_AgencyID",
                              Type = "_Type"
                          })';
            url = url.replace('_accounts', account);
            url = url.replace('_dateRangeFrom', this.fromDate);
            url = url.replace('_dateRangeTo', this.toDate);
            url = url.replace('_amountMin', MinAmount);
            url = url.replace('_amountMax', MaxAmount);
            url = url.replace('_Bankrule', bankrule);
            url = url.replace('_TrackingCategory1', TrackingCategories);
            url = url.replace('_TrackingCategory2', TrackingCategories_1);
            url = url.replace('_FilterType', filterReconcilationcategories);
            url = url.replace('_AgencyID', ClientID);
            url = url.replace('_Type', type);


            url = replaceAll(url, '\&amp;', '&');
            window.location.href = url;
        }

        function LoadFilterData() {
            var filterData = JSON.parse(sessionStorage.getItem('Filter'));
            if (filterData) {
                $('#Filter').css("background-color", "#edf2f9");
                if (filterData.accounts != '' && filterData.accounts.split(',').length > 0) {
                    $('#filteraccounts').val(filterData.accounts.split(',')).trigger('change');
                }
                $("#timepicker2").val(filterData.selectedDate);
                $("#filterMinAmount").val(filterData.amountMin);
                $("#filterMaxAmount").val(filterData.amountMax);
                if (filterData.Bankrule != '' && filterData.Bankrule.split(',').length > 0) {
                    $('#bankrule').val(filterData.Bankrule.split(',')).trigger('change');
                }
                //$("#bankrule").val(filterData.Bankrule.split(','));
                if (filterData.TrackingCategory1 != null && filterData.TrackingCategory1 != '' && filterData.TrackingCategory1.length > 0) {
                    $("#TrackingCategories").val(filterData.TrackingCategory1).trigger('change');
                }
                if (filterData.TrackingCategory2 != null && filterData.TrackingCategory2 != '' && filterData.TrackingCategory2.length > 0) {
                    $("#TrackingCategories_1").val(filterData.TrackingCategory2).trigger('change');
                }
                if (filterData.FilterType == 0) {
                    $('#rb0').prop('checked', true);
                }
                else if (filterData.FilterType == 1) {
                    $('#rb1').prop('checked', true);
                }
                else if (filterData.FilterType == 2) {
                    $('#rb2').prop('checked', true);
                }
                else if (filterData.FilterType == 3) {
                    $('#rb3').prop('checked', true);
                }

            }

            }

        function Tabclick(e, type) {
                sessionStorage.setItem('Type', type);
                if (type == 0) {
                    $('#tabNotinBooks').addClass('tabselect');
                    $('#tabNotinBanks').removeClass('tabselect');
                }
                else {
                    $('#tabNotinBooks').removeClass('tabselect');
                    $('#tabNotinBanks').addClass('tabselect');
                }
        }
        function BulkActionReconcilation() {
            var GLaccount = $('#BA_filterGLaccounts').val();
            var ClientID = $("#ddlclient option:selected").val();
            var bankrule = $('#BA_bankrules').val();
            var TrackingCategories = $("#BA_TrackingCategories").val() != undefined ? $("#BA_TrackingCategories").val() : 0;
            var AditionalTrackingCategories = $("#BA_TrackingCategories_1").val() != undefined ? $("#BA_TrackingCategories_1").val() : 0;
            var IsAllSelected = $('#checkbox-bulk-purchases-select')[0].checked;
            var SelectedItems = sessionStorage.getItem('SelectedRecords');
            var UnSelectedRecords = sessionStorage.getItem('UnSelectedRecords');
            if (IsAllSelected == false && (SelectedItems == null || SelectedItems == '')) {
                ShowAlertBoxWarning("No records are selected to perform bulk action.");
                return;
            }
            if (GLaccount == '' && bankrule == '' && (TrackingCategories == '' || TrackingCategories == 0) && (AditionalTrackingCategories == '' && AditionalTrackingCategories == 0)) {
                ShowAlertBoxWarning("No Option are selected to perform bulk action.");
                return;
            }

            let pdata = {
                 GLaccount: GLaccount, TrackingCategory: TrackingCategories,
                AditionalTrackingCategory: AditionalTrackingCategories, BankRule: bankrule,
                AgencyID: ClientID, IsAllSelected: IsAllSelected, SelectedItems: SelectedItems,
                UnSelectedRecords: UnSelectedRecords
            };
            postAjax('/Reconciliation/ReconcilationBuilAction', JSON.stringify(pdata), function (response) {
                if (response.Message == 'Success') {
                    sessionStorage.removeItem('SelectedRecords');
                    sessionStorage.removeItem('UnSelectedRecords');
                    ShowAlertBoxSuccess("Success!", "Successfully updated " + response.UpdatedCount + " records.", function () { window.location.reload(); });
                }
                else if (response.Message == 'NoRecords')
                {
                    ShowAlertBoxWarning("No records are selected to perform bulk action.");
                    return;
                }
                else {
                    ShowAlertBoxError("Error", "Error while updateing records.");
                    return;
                }
            })

        }
        function replaceAll(string, search, replace) {
            return string.split(search).join(replace);
        }

            function onChangeglAccount(id, event) {
                var Selectedvalue = event.currentTarget.value;
                var ClientID = $("#ddlclient option:selected").val();
                postAjax('/Reconciliation/UpdateReconciliation?AgencyID=' + ClientID + '&id=' + id + '&GLAccount=' + Selectedvalue + '&BankRule=' + 0 + '&TrackingCategory=' + 0, null, function (response) {
                    if (response.Message == 'Success') {

                    }
                    else {

                    }

                })

            }
            function onChangeBankRule(id, event) {
                var Selectedvalue = event.currentTarget.value;
                var ClientID = $("#ddlclient option:selected").val();
                postAjax('/Reconciliation/UpdateReconciliation?AgencyID=' + ClientID + '&id=' + id + '&GLAccount=' + 0 + '&BankRule=' + Selectedvalue + '&TrackingCategory=' + 0, null, function (response) {
                    if (response.Message == 'Success') {

                    }
                    else {

                    }

                })
            }
            function onChangeTc(id, event) {
                var Selectedvalue = event.currentTarget.value;
                var ClientID = $("#ddlclient option:selected").val();
                postAjax('/Reconciliation/UpdateReconciliation?AgencyID=' + ClientID + '&id=' + id + '&GLAccount=' + 0 + '&BankRule=' + 0 + '&TrackingCategory=' + Selectedvalue, null, function (response) {
                    if (response.Message == 'Success') {

                    }
                    else {

                    }

                })
            }
            function onChangeAditinalTc(id, event) {
                var Selectedvalue = event.currentTarget.value;
                var ClientID = $("#ddlclient option:selected").val();
                postAjax('/Reconciliation/UpdateReconciliation?AgencyID=' + ClientID + '&id=' + id + '&GLAccount=' + 0 + '&BankRule=' + 0 + '&TrackingCategory=' + 0 + '&TrackingCategoryAdditional=' + Selectedvalue, null, function (response) {
                    if (response.Message == 'Success') {

                    }
                    else {

                    }

                })
            }
            function loadReconcilation() {

                var type = sessionStorage.getItem('Type');
                var recType = 'Not in Books';
                if (type != null && type == '1') {

                    recType = 'Not in Banks';
                }
                var ClientID = $("#ddlclient option:selected").val();

                postAjax('/Reconciliation/GetReconcilation?Type=' + recType, null, function (data) {
                    if (response.Message == "Success") {
                        let data = response.ResultData;
                    }
                    if (data === false) {


                    }
                    else {

                    }

                });

            }

            function AgencyDropdownPartialViewChange() {
                var ClientID = $("#ddlclient option:selected").val();

                $.ajax({
                    url: '/AgencyService/GetClientDetails?id=' + ClientID,
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data != null) {
                            // Write here what should happend once client selected
                            SetUserPreferencesForAgency();
                            //loadReconcilation();
                            window.location.reload();
                        }
                        else {
                            // Write here what should happend once selected client is null
                        }
                    },
                    error: function () {
                        // Write here what should happend when action result is errored.
                    }
                });
            }

            function bindNotInBooksAndBanksCount() {
                var ClientID = $("#ddlclient option:selected").val();

                getAjax(`/Reconciliation/GetReconciliationDataCountAgencyId?AgencyId=${ClientID}`, null, function (response) {

                    if (response.Message == "Success") {
                        let data = response.ResultData;
                        let totalSum = 0;
                        for (var i = 0; i < data.length; i++) {
                            totalSum = totalSum + data[i].totalCount;
                            if (data[i].type.toLowerCase() == "Outstanding Payments".toLowerCase()) {
                                $("#lblNotInBanksCount").text(data[i].totalCount);
                            }
                            else {
                                $("#lblNotInBooksCount").text(data[i].totalCount);
                            }
                        }

                        $("#lblNotInCount").text(totalSum);

                    }
                })
            }



        function bindNotInBooksAndBanksCountDashboard() {
                var ClientID = $("#ddlclient option:selected").val();
                getAjax(`/Reconciliation/GetReconciliationDashboardDataAgencyId?AgencyId=${ClientID}`, null, function (response) {

                    if (response.Message == "Success") {
                        let data = response.ResultData;
                        let totalSum = 0;
                        for (var i = 0; i < data.length; i++) {
                            totalSum = totalSum + data[i].Count;
                            if (data[i].type.toLowerCase() == "Outstanding Payments".toLowerCase()) {
                                $("#lblNotInBanksCount").text(data[i].Count);
                            }
                            else {
                                $("#lblNotInBooksCount").text(data[i].Count);
                            }
                        }
                        $("#lblNotInCount").text(totalSum);

                    }
                })
            }

    </script>

}

